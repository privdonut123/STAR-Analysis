//
// File generated by rootcint at Wed Oct  4 17:46:22 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIStFcsWaveformFitMakerdIStFcsWaveformFitMaker_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StFcsWaveformFitMaker_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void PeakWindow_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PeakWindow(void *p = 0);
   static void *newArray_PeakWindow(Long_t size, void *p);
   static void delete_PeakWindow(void *p);
   static void deleteArray_PeakWindow(void *p);
   static void destruct_PeakWindow(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PeakWindow*)
   {
      ::PeakWindow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PeakWindow >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PeakWindow", ::PeakWindow::Class_Version(), ".sl73_gcc485/obj/StRoot/StFcsWaveformFitMaker/PeakWindow.h", 55,
                  typeid(::PeakWindow), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PeakWindow::Dictionary, isa_proxy, 4,
                  sizeof(::PeakWindow) );
      instance.SetNew(&new_PeakWindow);
      instance.SetNewArray(&newArray_PeakWindow);
      instance.SetDelete(&delete_PeakWindow);
      instance.SetDeleteArray(&deleteArray_PeakWindow);
      instance.SetDestructor(&destruct_PeakWindow);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PeakWindow*)
   {
      return GenerateInitInstanceLocal((::PeakWindow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PeakWindow*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PeakAnaPainter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PeakAnaPainter(void *p = 0);
   static void *newArray_PeakAnaPainter(Long_t size, void *p);
   static void delete_PeakAnaPainter(void *p);
   static void deleteArray_PeakAnaPainter(void *p);
   static void destruct_PeakAnaPainter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PeakAnaPainter*)
   {
      ::PeakAnaPainter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PeakAnaPainter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PeakAnaPainter", ::PeakAnaPainter::Class_Version(), ".sl73_gcc485/obj/StRoot/StFcsWaveformFitMaker/PeakAnaPainter.h", 50,
                  typeid(::PeakAnaPainter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PeakAnaPainter::Dictionary, isa_proxy, 4,
                  sizeof(::PeakAnaPainter) );
      instance.SetNew(&new_PeakAnaPainter);
      instance.SetNewArray(&newArray_PeakAnaPainter);
      instance.SetDelete(&delete_PeakAnaPainter);
      instance.SetDeleteArray(&deleteArray_PeakAnaPainter);
      instance.SetDestructor(&destruct_PeakAnaPainter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PeakAnaPainter*)
   {
      return GenerateInitInstanceLocal((::PeakAnaPainter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PeakAnaPainter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PeakAna_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PeakAna(void *p = 0);
   static void *newArray_PeakAna(Long_t size, void *p);
   static void delete_PeakAna(void *p);
   static void deleteArray_PeakAna(void *p);
   static void destruct_PeakAna(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PeakAna*)
   {
      ::PeakAna *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PeakAna >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PeakAna", ::PeakAna::Class_Version(), ".sl73_gcc485/obj/StRoot/StFcsWaveformFitMaker/PeakAna.h", 93,
                  typeid(::PeakAna), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PeakAna::Dictionary, isa_proxy, 4,
                  sizeof(::PeakAna) );
      instance.SetNew(&new_PeakAna);
      instance.SetNewArray(&newArray_PeakAna);
      instance.SetDelete(&delete_PeakAna);
      instance.SetDeleteArray(&deleteArray_PeakAna);
      instance.SetDestructor(&destruct_PeakAna);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PeakAna*)
   {
      return GenerateInitInstanceLocal((::PeakAna*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PeakAna*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StFcsPulseAna_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StFcsPulseAna(void *p = 0);
   static void *newArray_StFcsPulseAna(Long_t size, void *p);
   static void delete_StFcsPulseAna(void *p);
   static void deleteArray_StFcsPulseAna(void *p);
   static void destruct_StFcsPulseAna(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StFcsPulseAna*)
   {
      ::StFcsPulseAna *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StFcsPulseAna >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StFcsPulseAna", ::StFcsPulseAna::Class_Version(), ".sl73_gcc485/obj/StRoot/StFcsWaveformFitMaker/StFcsPulseAna.h", 37,
                  typeid(::StFcsPulseAna), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StFcsPulseAna::Dictionary, isa_proxy, 4,
                  sizeof(::StFcsPulseAna) );
      instance.SetNew(&new_StFcsPulseAna);
      instance.SetNewArray(&newArray_StFcsPulseAna);
      instance.SetDelete(&delete_StFcsPulseAna);
      instance.SetDeleteArray(&deleteArray_StFcsPulseAna);
      instance.SetDestructor(&destruct_StFcsPulseAna);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StFcsPulseAna*)
   {
      return GenerateInitInstanceLocal((::StFcsPulseAna*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StFcsPulseAna*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StFcsWaveformFitMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StFcsWaveformFitMaker(void *p = 0);
   static void *newArray_StFcsWaveformFitMaker(Long_t size, void *p);
   static void delete_StFcsWaveformFitMaker(void *p);
   static void deleteArray_StFcsWaveformFitMaker(void *p);
   static void destruct_StFcsWaveformFitMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StFcsWaveformFitMaker*)
   {
      ::StFcsWaveformFitMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StFcsWaveformFitMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StFcsWaveformFitMaker", ::StFcsWaveformFitMaker::Class_Version(), ".sl73_gcc485/obj/StRoot/StFcsWaveformFitMaker/StFcsWaveformFitMaker.h", 67,
                  typeid(::StFcsWaveformFitMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StFcsWaveformFitMaker::Dictionary, isa_proxy, 4,
                  sizeof(::StFcsWaveformFitMaker) );
      instance.SetNew(&new_StFcsWaveformFitMaker);
      instance.SetNewArray(&newArray_StFcsWaveformFitMaker);
      instance.SetDelete(&delete_StFcsWaveformFitMaker);
      instance.SetDeleteArray(&deleteArray_StFcsWaveformFitMaker);
      instance.SetDestructor(&destruct_StFcsWaveformFitMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StFcsWaveformFitMaker*)
   {
      return GenerateInitInstanceLocal((::StFcsWaveformFitMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StFcsWaveformFitMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TGraphAsymmErrorsWithReset_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TGraphAsymmErrorsWithReset(void *p = 0);
   static void *newArray_TGraphAsymmErrorsWithReset(Long_t size, void *p);
   static void delete_TGraphAsymmErrorsWithReset(void *p);
   static void deleteArray_TGraphAsymmErrorsWithReset(void *p);
   static void destruct_TGraphAsymmErrorsWithReset(void *p);
   static Long64_t merge_TGraphAsymmErrorsWithReset(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TGraphAsymmErrorsWithReset*)
   {
      ::TGraphAsymmErrorsWithReset *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGraphAsymmErrorsWithReset >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGraphAsymmErrorsWithReset", ::TGraphAsymmErrorsWithReset::Class_Version(), ".sl73_gcc485/obj/StRoot/StFcsWaveformFitMaker/TGraphAsymmErrorsWithReset.h", 6,
                  typeid(::TGraphAsymmErrorsWithReset), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TGraphAsymmErrorsWithReset::Dictionary, isa_proxy, 4,
                  sizeof(::TGraphAsymmErrorsWithReset) );
      instance.SetNew(&new_TGraphAsymmErrorsWithReset);
      instance.SetNewArray(&newArray_TGraphAsymmErrorsWithReset);
      instance.SetDelete(&delete_TGraphAsymmErrorsWithReset);
      instance.SetDeleteArray(&deleteArray_TGraphAsymmErrorsWithReset);
      instance.SetDestructor(&destruct_TGraphAsymmErrorsWithReset);
      instance.SetMerge(&merge_TGraphAsymmErrorsWithReset);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TGraphAsymmErrorsWithReset*)
   {
      return GenerateInitInstanceLocal((::TGraphAsymmErrorsWithReset*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGraphAsymmErrorsWithReset*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr PeakWindow::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PeakWindow::Class_Name()
{
   return "PeakWindow";
}

//______________________________________________________________________________
const char *PeakWindow::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PeakWindow*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PeakWindow::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PeakWindow*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PeakWindow::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PeakWindow*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PeakWindow::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PeakWindow*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PeakAnaPainter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PeakAnaPainter::Class_Name()
{
   return "PeakAnaPainter";
}

//______________________________________________________________________________
const char *PeakAnaPainter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PeakAnaPainter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PeakAnaPainter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PeakAnaPainter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PeakAnaPainter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PeakAnaPainter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PeakAnaPainter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PeakAnaPainter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PeakAna::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PeakAna::Class_Name()
{
   return "PeakAna";
}

//______________________________________________________________________________
const char *PeakAna::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PeakAna*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PeakAna::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PeakAna*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PeakAna::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PeakAna*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PeakAna::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PeakAna*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StFcsPulseAna::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFcsPulseAna::Class_Name()
{
   return "StFcsPulseAna";
}

//______________________________________________________________________________
const char *StFcsPulseAna::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFcsPulseAna*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFcsPulseAna::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFcsPulseAna*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFcsPulseAna::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFcsPulseAna*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFcsPulseAna::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFcsPulseAna*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StFcsWaveformFitMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFcsWaveformFitMaker::Class_Name()
{
   return "StFcsWaveformFitMaker";
}

//______________________________________________________________________________
const char *StFcsWaveformFitMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFcsWaveformFitMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFcsWaveformFitMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFcsWaveformFitMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFcsWaveformFitMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFcsWaveformFitMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFcsWaveformFitMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFcsWaveformFitMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TGraphAsymmErrorsWithReset::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TGraphAsymmErrorsWithReset::Class_Name()
{
   return "TGraphAsymmErrorsWithReset";
}

//______________________________________________________________________________
const char *TGraphAsymmErrorsWithReset::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGraphAsymmErrorsWithReset*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGraphAsymmErrorsWithReset::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGraphAsymmErrorsWithReset*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGraphAsymmErrorsWithReset::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGraphAsymmErrorsWithReset*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGraphAsymmErrorsWithReset::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGraphAsymmErrorsWithReset*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void PeakAna::Streamer(TBuffer &R__b)
{
   // Stream an object of class PeakAna.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PeakAna::Class(),this);
   } else {
      R__b.WriteClassBuffer(PeakAna::Class(),this);
   }
}

//______________________________________________________________________________
void PeakAna::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PeakAna.
      TClass *R__cl = ::PeakAna::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mComputedIndex", &mComputedIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPeaks", (void*)&mPeaks);
      R__insp.InspectMember("vector<PeakWindow>", (void*)&mPeaks, "mPeaks.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mFoundPeak", &mFoundPeak);
      R__insp.InspectMember(mFoundPeak, "mFoundPeak.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSearch", &mSearch);
      R__insp.InspectMember(mSearch, "mSearch.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBaseline", &mBaseline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBaselineSigma", &mBaselineSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBaselineSigmaScale", &mBaselineSigmaScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxX", &mMaxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxY", &mMaxY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDeltaX", &mDeltaX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mG_Data", &mG_Data);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mXRangeMin", &mXRangeMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mXRangeMax", &mXRangeMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mYRangeMin", &mYRangeMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mYRangeMax", &mYRangeMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTunnelScale", &mTunnelScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTunnelSigma", &mTunnelSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTunnelThreshold", &mTunnelThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mChiralityPeakScale", &mChiralityPeakScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mChiralityScale", &mChiralityScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mChiralityProbScale", &mChiralityProbScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mChiralityThreshold", &mChiralityThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mFilter", &mFilter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFilterWeights", &mFilterWeights);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mFilterScale", &mFilterScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mPainter", &mPainter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOption", &mOption);
      R__insp.InspectMember(mOption, "mOption.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDEBUG", &mDEBUG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mInternalSignal", &mInternalSignal);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PeakAna(void *p) {
      return  p ? new(p) ::PeakAna : new ::PeakAna;
   }
   static void *newArray_PeakAna(Long_t nElements, void *p) {
      return p ? new(p) ::PeakAna[nElements] : new ::PeakAna[nElements];
   }
   // Wrapper around operator delete
   static void delete_PeakAna(void *p) {
      delete ((::PeakAna*)p);
   }
   static void deleteArray_PeakAna(void *p) {
      delete [] ((::PeakAna*)p);
   }
   static void destruct_PeakAna(void *p) {
      typedef ::PeakAna current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PeakAna

//______________________________________________________________________________
void PeakAnaPainter::Streamer(TBuffer &R__b)
{
   // Stream an object of class PeakAnaPainter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PeakAnaPainter::Class(),this);
   } else {
      R__b.WriteClassBuffer(PeakAnaPainter::Class(),this);
   }
}

//______________________________________________________________________________
void PeakAnaPainter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PeakAnaPainter.
      TClass *R__cl = ::PeakAnaPainter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTheBaseLine", &mTheBaseLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTheHitLine", &mTheHitLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mPA", &mPA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mPaveT_PA", &mPaveT_PA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGraphOption", &mGraphOption);
      R__insp.InspectMember(mGraphOption, "mGraphOption.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPeakOption", &mPeakOption);
      R__insp.InspectMember(mPeakOption, "mPeakOption.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStatsOption", &mStatsOption);
      R__insp.InspectMember(mStatsOption, "mStatsOption.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDEBUG", &mDEBUG);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PeakAnaPainter(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PeakAnaPainter : new ::PeakAnaPainter;
   }
   static void *newArray_PeakAnaPainter(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PeakAnaPainter[nElements] : new ::PeakAnaPainter[nElements];
   }
   // Wrapper around operator delete
   static void delete_PeakAnaPainter(void *p) {
      delete ((::PeakAnaPainter*)p);
   }
   static void deleteArray_PeakAnaPainter(void *p) {
      delete [] ((::PeakAnaPainter*)p);
   }
   static void destruct_PeakAnaPainter(void *p) {
      typedef ::PeakAnaPainter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PeakAnaPainter

//______________________________________________________________________________
void PeakWindow::Streamer(TBuffer &R__b)
{
   // Stream an object of class PeakWindow.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PeakWindow::Class(),this);
   } else {
      R__b.WriteClassBuffer(PeakWindow::Class(),this);
   }
}

//______________________________________________________________________________
void PeakWindow::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PeakWindow.
      TClass *R__cl = ::PeakWindow::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStartX", &mStartX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEndX", &mEndX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStartY", &mStartY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEndY", &mEndY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mP_Peak", &mP_Peak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPeakX", &mPeakX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPeakY", &mPeakY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mStartLine", &mStartLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mPeakMarker", &mPeakMarker);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEndLine", &mEndLine);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PeakWindow(void *p) {
      return  p ? new(p) ::PeakWindow : new ::PeakWindow;
   }
   static void *newArray_PeakWindow(Long_t nElements, void *p) {
      return p ? new(p) ::PeakWindow[nElements] : new ::PeakWindow[nElements];
   }
   // Wrapper around operator delete
   static void delete_PeakWindow(void *p) {
      delete ((::PeakWindow*)p);
   }
   static void deleteArray_PeakWindow(void *p) {
      delete [] ((::PeakWindow*)p);
   }
   static void destruct_PeakWindow(void *p) {
      typedef ::PeakWindow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PeakWindow

//______________________________________________________________________________
void StFcsPulseAna::Streamer(TBuffer &R__b)
{
   // Stream an object of class StFcsPulseAna.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StFcsPulseAna::Class(),this);
   } else {
      R__b.WriteClassBuffer(StFcsPulseAna::Class(),this);
   }
}

//______________________________________________________________________________
void StFcsPulseAna::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StFcsPulseAna.
      TClass *R__cl = ::StFcsPulseAna::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mDbPulse", &mDbPulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_Baseline", &mH1_Baseline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mF1_SignalFit", &mF1_SignalFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mF1_BaselineFit", &mF1_BaselineFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mName", (void*)&mName);
      R__insp.InspectMember("string", (void*)&mName, "mName.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mWindowSum", &mWindowSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mFitSum", &mFitSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSumAdc", &mSumAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSumAdcFit", &mSumAdcFit);
      PeakAna::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StFcsPulseAna(void *p) {
      return  p ? new(p) ::StFcsPulseAna : new ::StFcsPulseAna;
   }
   static void *newArray_StFcsPulseAna(Long_t nElements, void *p) {
      return p ? new(p) ::StFcsPulseAna[nElements] : new ::StFcsPulseAna[nElements];
   }
   // Wrapper around operator delete
   static void delete_StFcsPulseAna(void *p) {
      delete ((::StFcsPulseAna*)p);
   }
   static void deleteArray_StFcsPulseAna(void *p) {
      delete [] ((::StFcsPulseAna*)p);
   }
   static void destruct_StFcsPulseAna(void *p) {
      typedef ::StFcsPulseAna current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StFcsPulseAna

//______________________________________________________________________________
void StFcsWaveformFitMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class StFcsWaveformFitMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StFcsWaveformFitMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(StFcsWaveformFitMaker::Class(),this);
   }
}

//______________________________________________________________________________
void StFcsWaveformFitMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StFcsWaveformFitMaker.
      TClass *R__cl = ::StFcsWaveformFitMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTime", &mTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTimeIntg[4]", &mTimeIntg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mChWaveData", &mChWaveData);
      R__insp.InspectMember(mChWaveData, "mChWaveData.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mPulseFit", &mPulseFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTest", &mTest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mOutFile", &mOutFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_Dep0DepMod[3]", &mH2_Dep0DepMod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_Sum8Dep0[3]", &mH2_Sum8Dep0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_Sum8DepMod[3]", &mH2_Sum8DepMod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_NPeaksAkio", &mH1_NPeaksAkio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_NPeaksFilteredAkio", &mH1_NPeaksFilteredAkio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2F_AdcTbAkio[6]", &mH2F_AdcTbAkio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2F_AdcTbMine[6]", &mH2F_AdcTbMine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2F_AdcTbValidPeak[7]", &mH2F_AdcTbValidPeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2F_SumFitvSumWin[6]", &mH2F_SumFitvSumWin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2F_APeakvMPeak[6]", &mH2F_APeakvMPeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1F_PeakStart[6]", &mH1F_PeakStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1F_PeakEnd[6]", &mH1F_PeakEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_PeakTiming", &mH1_PeakTiming);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1F_NPeaks[7]", &mH1F_NPeaks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1F_NPeaksFiltered[7]", &mH1F_NPeaksFiltered);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_NPeakvsPeakXdiff", &mH2_NPeakvsPeakXdiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_NPeakvsPeakYratio", &mH2_NPeakvsPeakYratio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_VOverlap", &mH1_VOverlap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_NOvsNPeaks", &mH2_NOvsNPeaks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_VvsNOverlap", &mH2_VvsNOverlap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2F_NOvsId[6]", &mH2F_NOvsId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1F_Res0[7]", &mH1F_Res0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1F_Res0Zoom[7]", &mH1F_Res0Zoom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1F_Sum8Res0[7]", &mH1F_Sum8Res0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1F_Sum8Res0Zoom[7]", &mH1F_Sum8Res0Zoom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1F_FitRes0[7]", &mH1F_FitRes0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1F_FitRes0Zoom[7]", &mH1F_FitRes0Zoom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2F_Sum8vFit[7]", &mH2F_Sum8vFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_TimeFitPulse", &mH1_TimeFitPulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_HeightvsSigma", &mH2_HeightvsSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_HeightvsSigmaTrig", &mH2_HeightvsSigmaTrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_ChiNdf", &mH1_ChiNdf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_HeightvsChiNdf", &mH2_HeightvsChiNdf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_MeanvsChiNdf", &mH2_MeanvsChiNdf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_SigmavsChiNdf", &mH2_SigmavsChiNdf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_PeakTimingGaus", &mH1_PeakTimingGaus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH1_PeakTimingPuls", &mH1_PeakTimingPuls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mH2_PeakTimingCompare", &mH2_PeakTimingCompare);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mDb", &mDb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mDbPulse", &mDbPulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFcsCollection", &mFcsCollection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHitIdx", &mHitIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMeasureTime", &mMeasureTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEnergySelect[3]", mEnergySelect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAnaWaveform", &mAnaWaveform);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCenterTB", &mCenterTB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMinTB", &mMinTB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxTB", &mMaxTB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mError", &mError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mErrorSaturated", &mErrorSaturated);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAdcSaturation", &mAdcSaturation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPedMin", &mPedMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPedMax", &mPedMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMinAdc", &mMinAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTail", &mTail);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxPeak", &mMaxPeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mCanvas", &mCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPage", &mPage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPad", &mPad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxPage", &mMaxPage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSkip", &mSkip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFilename", &mFilename);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFilter", &mFilter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDetName[100]", mDetName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mFitDrawOn", &mFitDrawOn);
      StMaker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StFcsWaveformFitMaker(void *p) {
      return  p ? new(p) ::StFcsWaveformFitMaker : new ::StFcsWaveformFitMaker;
   }
   static void *newArray_StFcsWaveformFitMaker(Long_t nElements, void *p) {
      return p ? new(p) ::StFcsWaveformFitMaker[nElements] : new ::StFcsWaveformFitMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_StFcsWaveformFitMaker(void *p) {
      delete ((::StFcsWaveformFitMaker*)p);
   }
   static void deleteArray_StFcsWaveformFitMaker(void *p) {
      delete [] ((::StFcsWaveformFitMaker*)p);
   }
   static void destruct_StFcsWaveformFitMaker(void *p) {
      typedef ::StFcsWaveformFitMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StFcsWaveformFitMaker

//______________________________________________________________________________
void TGraphAsymmErrorsWithReset::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGraphAsymmErrorsWithReset.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGraphAsymmErrorsWithReset::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGraphAsymmErrorsWithReset::Class(),this);
   }
}

//______________________________________________________________________________
void TGraphAsymmErrorsWithReset::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TGraphAsymmErrorsWithReset.
      TClass *R__cl = ::TGraphAsymmErrorsWithReset::IsA();
      if (R__cl || R__insp.IsA()) { }
      TGraphAsymmErrors::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TGraphAsymmErrorsWithReset(void *p) {
      return  p ? new(p) ::TGraphAsymmErrorsWithReset : new ::TGraphAsymmErrorsWithReset;
   }
   static void *newArray_TGraphAsymmErrorsWithReset(Long_t nElements, void *p) {
      return p ? new(p) ::TGraphAsymmErrorsWithReset[nElements] : new ::TGraphAsymmErrorsWithReset[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGraphAsymmErrorsWithReset(void *p) {
      delete ((::TGraphAsymmErrorsWithReset*)p);
   }
   static void deleteArray_TGraphAsymmErrorsWithReset(void *p) {
      delete [] ((::TGraphAsymmErrorsWithReset*)p);
   }
   static void destruct_TGraphAsymmErrorsWithReset(void *p) {
      typedef ::TGraphAsymmErrorsWithReset current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the merge function.
   static Long64_t  merge_TGraphAsymmErrorsWithReset(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::TGraphAsymmErrorsWithReset*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::TGraphAsymmErrorsWithReset

/********************************************************
* .sl73_gcc485/obj/StRoot/StFcsWaveformFitMaker/StFcsWaveformFitMaker_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStFcsWaveformFitMaker_Cint();

extern "C" void G__set_cpp_environmentStFcsWaveformFitMaker_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("PeakAna.h");
  G__add_compiledheader("PeakAnaPainter.h");
  G__add_compiledheader("PeakWindow.h");
  G__add_compiledheader("StFcsPulseAna.h");
  G__add_compiledheader("StFcsWaveformFitMaker.h");
  G__add_compiledheader("TGraphAsymmErrorsWithReset.h");
  G__cpp_reset_tagtableStFcsWaveformFitMaker_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStFcsWaveformFitMaker_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* PeakWindow */
static int G__StFcsWaveformFitMaker_Cint_260_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PeakWindow* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PeakWindow[n];
     } else {
       p = new((void*) gvp) PeakWindow[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PeakWindow;
     } else {
       p = new((void*) gvp) PeakWindow;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PeakWindow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PeakWindow((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) PeakWindow((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PeakWindow* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PeakWindow(*(PeakWindow*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) PeakWindow(*(PeakWindow*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PeakWindow& obj = ((PeakWindow*) G__getstructoffset())->operator=(*(PeakWindow*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetWindow((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const PeakWindow*) G__getstructoffset())->GetWindow(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetPeak((TGraph*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         PeakWindow* pobj;
         PeakWindow xobj = PeakWindow::Combine(*(PeakWindow*) libp->para[0].ref, *(PeakWindow*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
         pobj = new PeakWindow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         PeakWindow* pobj;
         PeakWindow xobj = PeakWindow::Combine(*(PeakWindow*) libp->para[0].ref, *(PeakWindow*) libp->para[1].ref);
         pobj = new PeakWindow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((PeakWindow*) G__getstructoffset())->Combine(*(PeakWindow*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((PeakWindow*) G__getstructoffset())->Combine(*(PeakWindow*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const PeakWindow*) G__getstructoffset())->CompareTo(*(PeakWindow*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakWindow*) G__getstructoffset())->StartEndLineSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakWindow*) G__getstructoffset())->StartEndSlopeUncertainty((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakWindow*) G__getstructoffset())->StartEndLineYint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const PeakWindow*) G__getstructoffset())->MidPoint((TGraph*) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const PeakWindow*) G__getstructoffset())->MidPoint());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakWindow*) G__getstructoffset())->SlopeChirality((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakWindow*) G__getstructoffset())->PeakChirality((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakWindow*) G__getstructoffset())->PeakChiralityProb((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakWindow*) G__getstructoffset())->PeakChiralityProb((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const PeakWindow*) G__getstructoffset())->PeakTunnelProb((TGraph*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const PeakWindow*) G__getstructoffset())->PeakTunnelProb((TGraph*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const PeakWindow*) G__getstructoffset())->PeakTunnelProb((TGraph*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->Reset((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((PeakWindow*) G__getstructoffset())->GetStartLine((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((PeakWindow*) G__getstructoffset())->GetStartLine((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((PeakWindow*) G__getstructoffset())->GetStartLine());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakWindow*) G__getstructoffset())->GetStartLineColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakWindow*) G__getstructoffset())->GetStartLineStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakWindow*) G__getstructoffset())->GetStartLineWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetStartLineColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetStartLineColorAlpha((Color_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetStartLineStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetStartLineWidth((Width_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PeakWindow*) G__getstructoffset())->GetPeakMarker());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakWindow*) G__getstructoffset())->GetPeakMarkerColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakWindow*) G__getstructoffset())->GetPeakMarkerStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const PeakWindow*) G__getstructoffset())->GetPeakMarkerSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetPeakMarkerColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetPeakMarkerColorAlpha((Color_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetPeakMarkerStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetPeakMarkerSize((Size_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((PeakWindow*) G__getstructoffset())->GetEndLine((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((PeakWindow*) G__getstructoffset())->GetEndLine((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((PeakWindow*) G__getstructoffset())->GetEndLine());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakWindow*) G__getstructoffset())->GetEndLineColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakWindow*) G__getstructoffset())->GetEndLineStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakWindow*) G__getstructoffset())->GetEndLineWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetEndLineColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetEndLineColorAlpha((Color_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetEndLineStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->SetEndLineWidth((Width_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PeakWindow::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PeakWindow::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PeakWindow::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PeakWindow::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakWindow*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PeakWindow::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PeakWindow::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PeakWindow::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_260_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PeakWindow::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PeakWindow G__TPeakWindow;
static int G__StFcsWaveformFitMaker_Cint_260_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PeakWindow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PeakWindow*) (soff+(sizeof(PeakWindow)*i)))->~G__TPeakWindow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PeakWindow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PeakWindow*) (soff))->~G__TPeakWindow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PeakAnaPainter */
static int G__StFcsWaveformFitMaker_Cint_261_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PeakAnaPainter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PeakAnaPainter[n];
     } else {
       p = new((void*) gvp) PeakAnaPainter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PeakAnaPainter;
     } else {
       p = new((void*) gvp) PeakAnaPainter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAnaPainter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PeakAnaPainter*) G__getstructoffset())->Paint((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PeakAnaPainter*) G__getstructoffset())->Paint();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->PaintRawData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->PaintFoundPeak();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->PaintFoundPeakQa();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->PaintPeakQa();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->PaintBaselines();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->PaintFoundRange();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->PaintPeakRanges();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->PaintStats();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->CleanPainter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->SetPeakAna((PeakAna*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PeakAnaPainter*) G__getstructoffset())->GetBaseLineColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PeakAnaPainter*) G__getstructoffset())->GetBaseLineStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PeakAnaPainter*) G__getstructoffset())->GetBaseLineWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PeakAnaPainter*) G__getstructoffset())->GetHitLineColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PeakAnaPainter*) G__getstructoffset())->GetHitLineStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PeakAnaPainter*) G__getstructoffset())->GetHitLineWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->SetBaseLineColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->SetBaseLineColorAlpha((Color_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->SetBaseLineStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->SetBaseLineWidth((Width_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->SetHitLineColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->SetHitLineColorAlpha((Color_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->SetHitLineStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->SetHitLineWidth((Width_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((PeakAnaPainter*) G__getstructoffset())->ValidGraph());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PeakAnaPainter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PeakAnaPainter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PeakAnaPainter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PeakAnaPainter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const PeakAnaPainter*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAnaPainter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PeakAnaPainter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PeakAnaPainter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PeakAnaPainter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_261_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PeakAnaPainter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StFcsWaveformFitMaker_Cint_261_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PeakAnaPainter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PeakAnaPainter(*(PeakAnaPainter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAnaPainter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PeakAnaPainter G__TPeakAnaPainter;
static int G__StFcsWaveformFitMaker_Cint_261_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PeakAnaPainter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PeakAnaPainter*) (soff+(sizeof(PeakAnaPainter)*i)))->~G__TPeakAnaPainter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PeakAnaPainter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PeakAnaPainter*) (soff))->~G__TPeakAnaPainter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StFcsWaveformFitMaker_Cint_261_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PeakAnaPainter* dest = (PeakAnaPainter*) G__getstructoffset();
   *dest = *(PeakAnaPainter*) libp->para[0].ref;
   const PeakAnaPainter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PeakAna */
static int G__StFcsWaveformFitMaker_Cint_262_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PeakAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PeakAna[n];
     } else {
       p = new((void*) gvp) PeakAna[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PeakAna;
     } else {
       p = new((void*) gvp) PeakAna;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PeakAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PeakAna(
(int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) PeakAna(
(int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PeakAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PeakAna((TGraph*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) PeakAna((TGraph*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PeakAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PeakAna((TH1*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) PeakAna((TH1*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PeakAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PeakAna(*(PeakAna*) libp->para[0].ref, (TGraph*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) PeakAna(*(PeakAna*) libp->para[0].ref, (TGraph*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PeakAna(*(PeakAna*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) PeakAna(*(PeakAna*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PeakAna& obj = ((PeakAna*) G__getstructoffset())->operator=(*(PeakAna*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((PeakAna*) G__getstructoffset())->AddPeakStats((TPaveText*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((PeakAna*) G__getstructoffset())->AddPeakStats((TPaveText*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) PeakAna::ConvertHistToGraph((TH1*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) PeakAna::ConvertHistToGraph((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PeakAna::ConvertPeaksToGraph(*(vector<PeakWindow>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->ConvertPeaksToGraph();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         PeakAna* pobj;
         PeakAna xobj = PeakAna::ConvertPeaksToAna(*(PeakAna*) libp->para[0].ref);
         pobj = new PeakAna(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         PeakAna* pobj;
         PeakAna xobj = ((PeakAna*) G__getstructoffset())->ConvertPeaksToAna();
         pobj = new PeakAna(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->GetPossiblePeaks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PeakAna*) G__getstructoffset())->SearchForPeak(*(vector<PeakWindow>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PeakAna*) G__getstructoffset())->SearchForPeak(*(vector<PeakWindow>*) libp->para[0].ref, *(PeakWindow*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PeakAna*) G__getstructoffset())->SearchForPeak(*(vector<PeakWindow>*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PeakAna*) G__getstructoffset())->AnalyzeForPeak());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PeakAna*) G__getstructoffset())->AnalyzeForPeak((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PeakAna*) G__getstructoffset())->AnalyzeForNoisyPeak());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const PeakAna*) G__getstructoffset())->MergeByProbability(*(vector<PeakWindow>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const PeakAna*) G__getstructoffset())->MergeByChirality(*(vector<PeakWindow>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->MergeLeftOrRight((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->Baseline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->BaselineSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->BaselineSigmaScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->MinX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->MinY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->MaxX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->MaxY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->SearchPeak());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->SearchWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->TunnelScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->TunnelSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->TunnelThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((PeakAna*) G__getstructoffset())->GetPainter((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((PeakAna*) G__getstructoffset())->GetPainter());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->ForceInternal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((PeakAna*) G__getstructoffset())->GausFilter((Int_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((PeakAna*) G__getstructoffset())->GausFilter((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((PeakAna*) G__getstructoffset())->GausFilter());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((PeakAna*) G__getstructoffset())->GoodWindow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const PeakAna*) G__getstructoffset())->GetData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const PeakAna*) G__getstructoffset())->GetDebug());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PeakWindow& obj = ((const PeakAna*) G__getstructoffset())->GetPeak((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PeakWindow& obj = ((PeakAna*) G__getstructoffset())->GetPeak((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const PeakAna*) G__getstructoffset())->GetFilter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const PeakAna*) G__getstructoffset())->GetFilterScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const PeakAna*) G__getstructoffset())->FoundPeakIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->GetXYMax((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PeakAna*) G__getstructoffset())->MaxXval());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PeakAna*) G__getstructoffset())->MaxYval());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((PeakAna*) G__getstructoffset())->MeanFilter((Int_t) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((PeakAna*) G__getstructoffset())->MeanFilter((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((PeakAna*) G__getstructoffset())->MeanFilter());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const PeakAna*) G__getstructoffset())->NPeaks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const PeakAna*) G__getstructoffset())->ValidPeakIdx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PeakAna*) G__getstructoffset())->PeakStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PeakAna*) G__getstructoffset())->PeakEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PeakAna*) G__getstructoffset())->PeakX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PeakAna*) G__getstructoffset())->PeakY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->PeakXY(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const PeakAna*) G__getstructoffset())->PeakTunnel(*(PeakWindow*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->PeakProb(*(PeakWindow*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->ResetPeak();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetDebug((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetData((TGraph*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((PeakAna*) G__getstructoffset())->SetData((TH1*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((PeakAna*) G__getstructoffset())->SetData((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetBaseline((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetBaselineSigmaScale((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetContinuity((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((PeakAna*) G__getstructoffset())->SetFilter((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((PeakAna*) G__getstructoffset())->SetFilter((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetSearchWindow((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetTunnelScale((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetTunnelSigma((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetTunnelPars((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetTunnelThreshold((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->ChiralityPeakScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->ChiralityScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->ChiralityProbScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const PeakAna*) G__getstructoffset())->ChiralityThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetChiralityPeakScale((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetChiralityScale((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetChiralityProbScale((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetChiralityThreshold((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetPeak((const Int_t) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetWindow((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetWindow(*((PeakWindow*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetLineColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetLineStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetLineWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetFillColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetFillStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetMarkerColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const PeakAna*) G__getstructoffset())->GetMarkerSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetMarkerStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetLineColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetLineColorAlpha((Color_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetLineStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetLineWidth((Width_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetFillColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetFillColorAlpha((Color_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetFillStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PeakAna*) G__getstructoffset())->SetMarkerColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PeakAna*) G__getstructoffset())->SetMarkerColor();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetMarkerColorAlpha((Color_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PeakAna*) G__getstructoffset())->SetMarkerSize((Size_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PeakAna*) G__getstructoffset())->SetMarkerSize();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PeakAna*) G__getstructoffset())->SetMarkerStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PeakAna*) G__getstructoffset())->SetMarkerStyle();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetBaseLineColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetBaseLineStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetBaseLineWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetHitLineColor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetHitLineStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetHitLineWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetBaseLineColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetBaseLineColorAlpha((Color_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetBaseLineStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetBaseLineWidth((Width_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetHitLineColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetHitLineColorAlpha((Color_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetHitLineStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetHitLineWidth((Width_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetPeakLineColorS((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetPeakLineColorE((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetPeakStyleS((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetPeakStyleE((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetPeakWidthS((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetPeakWidthE((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetFoundPeakLineColorS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetFoundPeakLineColorE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetFoundPeakStyleS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetFoundPeakStyleE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetFoundPeakWidthS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const PeakAna*) G__getstructoffset())->GetFoundPeakWidthE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetFoundPeakLineColorS((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetFoundPeakLineColorE((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetFoundPeakLineColor((Color_t) G__int(libp->para[0]), (Color_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetFoundPeakStyleS((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetFoundPeakStyleE((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetFoundPeakStyle((Style_t) G__int(libp->para[0]), (Style_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetFoundPeakWidthS((Width_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetFoundPeakWidthE((Width_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetFoundPeakWidth((Width_t) G__int(libp->para[0]), (Width_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetPeakLineColorS((UInt_t) G__int(libp->para[0]), (Color_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetPeakLineColorE((UInt_t) G__int(libp->para[0]), (Color_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetPeakLineColor((UInt_t) G__int(libp->para[0]), (Color_t) G__int(libp->para[1])
, (Color_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetPeakLineColorAlphaS((UInt_t) G__int(libp->para[0]), (Color_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetPeakLineColorAlphaE((UInt_t) G__int(libp->para[0]), (Color_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetPeakLineColorAlpha((UInt_t) G__int(libp->para[0]), (Color_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Color_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetPeakLineStyleS((UInt_t) G__int(libp->para[0]), (Style_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetPeakLineStyleE((UInt_t) G__int(libp->para[0]), (Style_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetPeakLineStyle((UInt_t) G__int(libp->para[0]), (Style_t) G__int(libp->para[1])
, (Style_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_152(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetPeakLineWidthS((UInt_t) G__int(libp->para[0]), (Width_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetPeakLineWidthE((UInt_t) G__int(libp->para[0]), (Width_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetPeakLineWidth((UInt_t) G__int(libp->para[0]), (Width_t) G__int(libp->para[1])
, (Width_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetAllPeakLineColor((Color_t) G__int(libp->para[0]), (Color_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_156(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetAllPeakLineStyle((Style_t) G__int(libp->para[0]), (Color_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_157(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->SetAllPeakLineWidth((Width_t) G__int(libp->para[0]), (Width_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_162(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PeakAna::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_163(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PeakAna::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_164(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PeakAna::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_165(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PeakAna::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_169(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PeakAna*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_170(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PeakAna::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_171(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PeakAna::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_172(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PeakAna::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_262_0_173(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PeakAna::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PeakAna G__TPeakAna;
static int G__StFcsWaveformFitMaker_Cint_262_0_174(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PeakAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PeakAna*) (soff+(sizeof(PeakAna)*i)))->~G__TPeakAna();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PeakAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PeakAna*) (soff))->~G__TPeakAna();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StFcsPulseAna */
static int G__StFcsWaveformFitMaker_Cint_317_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFcsPulseAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFcsPulseAna[n];
     } else {
       p = new((void*) gvp) StFcsPulseAna[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFcsPulseAna;
     } else {
       p = new((void*) gvp) StFcsPulseAna;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFcsPulseAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StFcsPulseAna(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) StFcsPulseAna(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFcsPulseAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFcsPulseAna((TGraph*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) StFcsPulseAna((TGraph*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFcsPulseAna((TGraph*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StFcsPulseAna((TGraph*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFcsPulseAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFcsPulseAna(
*(StFcsPulseAna*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (TGraph*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) StFcsPulseAna(
*(StFcsPulseAna*) libp->para[0].ref, (const char*) G__int(libp->para[1])
, (TGraph*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFcsPulseAna(*(StFcsPulseAna*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) StFcsPulseAna(*(StFcsPulseAna*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFcsPulseAna(*(StFcsPulseAna*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) StFcsPulseAna(*(StFcsPulseAna*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StFcsPulseAna& obj = ((StFcsPulseAna*) G__getstructoffset())->operator=(*(StFcsPulseAna*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) StFcsPulseAna::MaxwellBoltzmannDist((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StFcsPulseAna::GetMBPars(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((StFcsPulseAna*) G__getstructoffset())->Name();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const StFcsPulseAna*) G__getstructoffset())->Name();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsPulseAna*) G__getstructoffset())->setDbPulse((StFcsDbPulse*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsPulseAna*) G__getstructoffset())->ResetFinder();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsPulseAna*) G__getstructoffset())->ResetBaseline();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsPulseAna*) G__getstructoffset())->ResetSum();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFcsPulseAna*) G__getstructoffset())->Sum((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFcsPulseAna*) G__getstructoffset())->SumWindow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((StFcsPulseAna*) G__getstructoffset())->GausFit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((StFcsPulseAna*) G__getstructoffset())->GausFit((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((StFcsPulseAna*) G__getstructoffset())->GausFit());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsPulseAna*) G__getstructoffset())->SignalMBPars(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((StFcsPulseAna*) G__getstructoffset())->SumMB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((StFcsPulseAna*) G__getstructoffset())->MBFit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((StFcsPulseAna*) G__getstructoffset())->MBFit((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((StFcsPulseAna*) G__getstructoffset())->MBFit());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((StFcsPulseAna*) G__getstructoffset())->PulseFit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((StFcsPulseAna*) G__getstructoffset())->PulseFit((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((StFcsPulseAna*) G__getstructoffset())->PulseFit());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((StFcsPulseAna*) G__getstructoffset())->SetFitPars(libp->para[0].ref ? *(TF1**) libp->para[0].ref : *(TF1**) (void*) (&G__Mlong(libp->para[0])), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((StFcsPulseAna*) G__getstructoffset())->SetFitPars(libp->para[0].ref ? *(TF1**) libp->para[0].ref : *(TF1**) (void*) (&G__Mlong(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StFcsPulseAna*) G__getstructoffset())->SetFitPars(libp->para[0].ref ? *(TF1**) libp->para[0].ref : *(TF1**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StFcsPulseAna::FillAdc((TGraphAsymmErrors*) G__int(libp->para[0]), *(unsigned short*) G__UShortref(&libp->para[1])
, (int) G__int(libp->para[2]), (unsigned short*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) StFcsPulseAna::SumDep0((TGraphAsymmErrors*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) StFcsPulseAna::SumDep0((TGraphAsymmErrors*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) StFcsPulseAna::SumDep0Mod((TGraphAsymmErrors*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) StFcsPulseAna::SumDep0Mod((TGraphAsymmErrors*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsPulseAna*) G__getstructoffset())->SetFitSignal((TF1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsPulseAna*) G__getstructoffset())->SetBaselineFit((TF1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsPulseAna*) G__getstructoffset())->SetZS();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsPulseAna*) G__getstructoffset())->AnalyzeForPedestal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StFcsPulseAna*) G__getstructoffset())->BaselineHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((StFcsPulseAna*) G__getstructoffset())->SignalFit((const char) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((StFcsPulseAna*) G__getstructoffset())->SignalFit());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StFcsPulseAna*) G__getstructoffset())->SignalFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StFcsPulseAna*) G__getstructoffset())->BaselineFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((const StFcsPulseAna*) G__getstructoffset())->DrawCopy((Option_t*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TGraph*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const StFcsPulseAna*) G__getstructoffset())->DrawCopy((Option_t*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const StFcsPulseAna*) G__getstructoffset())->DrawCopy((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const StFcsPulseAna*) G__getstructoffset())->DrawCopy());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StFcsPulseAna::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFcsPulseAna::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StFcsPulseAna::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StFcsPulseAna::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsPulseAna*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFcsPulseAna::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFcsPulseAna::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFcsPulseAna::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_317_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFcsPulseAna::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StFcsPulseAna G__TStFcsPulseAna;
static int G__StFcsWaveformFitMaker_Cint_317_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StFcsPulseAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StFcsPulseAna*) (soff+(sizeof(StFcsPulseAna)*i)))->~G__TStFcsPulseAna();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StFcsPulseAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StFcsPulseAna*) (soff))->~G__TStFcsPulseAna();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StFcsWaveformFitMaker */
static int G__StFcsWaveformFitMaker_Cint_630_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFcsWaveformFitMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFcsWaveformFitMaker((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StFcsWaveformFitMaker((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StFcsWaveformFitMaker[n];
       } else {
         p = new((void*) gvp) StFcsWaveformFitMaker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StFcsWaveformFitMaker;
       } else {
         p = new((void*) gvp) StFcsWaveformFitMaker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsWaveformFitMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setDebug((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setDebug();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setTest((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setEnergySelect((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setEnergySelect((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setEnergySelect((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setEnergySelect();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setCenterTimeBins((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setCenterTimeBins((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setCenterTimeBins((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setAdcSaturation((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setError((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setErrorSaturated((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setMinAdc((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setTail((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setMaxPeak((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setPedTimeBins((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setAnaWaveform((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setAnaWaveform();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StFcsWaveformFitMaker*) G__getstructoffset())->resetGraph());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((StFcsWaveformFitMaker*) G__getstructoffset())->getGraph((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((StFcsWaveformFitMaker*) G__getstructoffset())->getGraph());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StFcsWaveformFitMaker*) G__getstructoffset())->getGraph((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setMeasureTime((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StFcsWaveformFitMaker*) G__getstructoffset())->makeTGraphAsymmErrors((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StFcsWaveformFitMaker*) G__getstructoffset())->makeTGraphAsymmErrors((TGraph*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StFcsWaveformFitMaker*) G__getstructoffset())->makeTGraphAsymmErrors((StFcsHit*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StFcsWaveformFitMaker*) G__getstructoffset())->makeTGraphAsymmErrors((TH1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->analyzeWaveform((int) G__int(libp->para[0]), (TGraphAsymmErrors*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), libp->para[3].ref ? *(TF1**) libp->para[3].ref : *(TF1**) (void*) (&G__Mlong(libp->para[3]))
, (float) G__double(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->analyzeWaveform((int) G__int(libp->para[0]), (TGraphAsymmErrors*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), libp->para[3].ref ? *(TF1**) libp->para[3].ref : *(TF1**) (void*) (&G__Mlong(libp->para[3]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->analyzeWaveform(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (float*) G__int(libp->para[4]), libp->para[5].ref ? *(TF1**) libp->para[5].ref : *(TF1**) (void*) (&G__Mlong(libp->para[5]))
, (float) G__double(libp->para[6])));
      break;
   case 6:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->analyzeWaveform((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (float*) G__int(libp->para[4]), libp->para[5].ref ? *(TF1**) libp->para[5].ref : *(TF1**) (void*) (&G__Mlong(libp->para[5]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->analyzeWaveform((int) G__int(libp->para[0]), (TGraph*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), libp->para[3].ref ? *(TF1**) libp->para[3].ref : *(TF1**) (void*) (&G__Mlong(libp->para[3]))
, (float) G__double(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->analyzeWaveform((int) G__int(libp->para[0]), (TGraph*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), libp->para[3].ref ? *(TF1**) libp->para[3].ref : *(TF1**) (void*) (&G__Mlong(libp->para[3]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->analyzeWaveform((int) G__int(libp->para[0]), (StFcsHit*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), libp->para[3].ref ? *(TF1**) libp->para[3].ref : *(TF1**) (void*) (&G__Mlong(libp->para[3]))
, (float) G__double(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->analyzeWaveform((int) G__int(libp->para[0]), (StFcsHit*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), libp->para[3].ref ? *(TF1**) libp->para[3].ref : *(TF1**) (void*) (&G__Mlong(libp->para[3]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->AnaPed((TGraphAsymmErrors*) G__int(libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->AnaPed((StFcsHit*) G__int(libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->sum8((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->sum16((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->highest((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->highest3((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->gausFit((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, libp->para[2].ref ? *(TF1**) libp->para[2].ref : *(TF1**) (void*) (&G__Mlong(libp->para[2])), (float) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->gausFit((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, libp->para[2].ref ? *(TF1**) libp->para[2].ref : *(TF1**) (void*) (&G__Mlong(libp->para[2]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->gausFitWithPed((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, libp->para[2].ref ? *(TF1**) libp->para[2].ref : *(TF1**) (void*) (&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->PulseFit1((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, libp->para[2].ref ? *(TF1**) libp->para[2].ref : *(TF1**) (void*) (&G__Mlong(libp->para[2])), (float) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->PulseFit1((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, libp->para[2].ref ? *(TF1**) libp->para[2].ref : *(TF1**) (void*) (&G__Mlong(libp->para[2]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->PulseFit2((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, libp->para[2].ref ? *(TF1**) libp->para[2].ref : *(TF1**) (void*) (&G__Mlong(libp->para[2])), (float) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->PulseFit2((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, libp->para[2].ref ? *(TF1**) libp->para[2].ref : *(TF1**) (void*) (&G__Mlong(libp->para[2]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->PulseFitAll((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, libp->para[2].ref ? *(TF1**) libp->para[2].ref : *(TF1**) (void*) (&G__Mlong(libp->para[2])), (float) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->PulseFitAll((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, libp->para[2].ref ? *(TF1**) libp->para[2].ref : *(TF1**) (void*) (&G__Mlong(libp->para[2]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->PulseFit2WithPed((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, libp->para[2].ref ? *(TF1**) libp->para[2].ref : *(TF1**) (void*) (&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->PulseFitAllWithPed((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, libp->para[2].ref ? *(TF1**) libp->para[2].ref : *(TF1**) (void*) (&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((StFcsWaveformFitMaker*) G__getstructoffset())->PedFitPulseFit((TGraphAsymmErrors*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, libp->para[2].ref ? *(TF1**) libp->para[2].ref : *(TF1**) (void*) (&G__Mlong(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setMaxPage((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setSkip((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setFileName((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setFileName((char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setFileName((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->writeFile(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setFitDrawOn((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setFitDrawOn();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setFitFilter((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StFcsWaveformFitMaker*) G__getstructoffset())->centerTB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->setDavidFitter((StFcsPulseAna*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StFcsWaveformFitMaker*) G__getstructoffset())->davidFitter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((StFcsWaveformFitMaker*) G__getstructoffset())->InitFitter((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((StFcsWaveformFitMaker*) G__getstructoffset())->InitFitter());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFcsWaveformFitMaker::GenericPadPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFcsWaveformFitMaker::PadNum4x4((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->drawRegion((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->drawRegion((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->drawEvent((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StFcsWaveformFitMaker*) G__getstructoffset())->drawEvent((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->drawFitter((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const StFcsWaveformFitMaker*) G__getstructoffset())->drawCh((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->drawDualFit((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const StFcsWaveformFitMaker*) G__getstructoffset())->printArray();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StFcsWaveformFitMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFcsWaveformFitMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StFcsWaveformFitMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StFcsWaveformFitMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFcsWaveformFitMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFcsWaveformFitMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFcsWaveformFitMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFcsWaveformFitMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_630_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFcsWaveformFitMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StFcsWaveformFitMaker G__TStFcsWaveformFitMaker;
static int G__StFcsWaveformFitMaker_Cint_630_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StFcsWaveformFitMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StFcsWaveformFitMaker*) (soff+(sizeof(StFcsWaveformFitMaker)*i)))->~G__TStFcsWaveformFitMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StFcsWaveformFitMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StFcsWaveformFitMaker*) (soff))->~G__TStFcsWaveformFitMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGraphAsymmErrorsWithReset */
static int G__StFcsWaveformFitMaker_Cint_635_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraphAsymmErrorsWithReset*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_635_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGraphAsymmErrorsWithReset::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_635_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGraphAsymmErrorsWithReset::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_635_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGraphAsymmErrorsWithReset::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_635_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGraphAsymmErrorsWithReset::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_635_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGraphAsymmErrorsWithReset*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_635_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGraphAsymmErrorsWithReset::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_635_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGraphAsymmErrorsWithReset::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_635_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGraphAsymmErrorsWithReset::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFcsWaveformFitMaker_Cint_635_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGraphAsymmErrorsWithReset::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__StFcsWaveformFitMaker_Cint_635_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGraphAsymmErrorsWithReset *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGraphAsymmErrorsWithReset[n];
     } else {
       p = new((void*) gvp) TGraphAsymmErrorsWithReset[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGraphAsymmErrorsWithReset;
     } else {
       p = new((void*) gvp) TGraphAsymmErrorsWithReset;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StFcsWaveformFitMaker_Cint_635_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TGraphAsymmErrorsWithReset* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TGraphAsymmErrorsWithReset(*(TGraphAsymmErrorsWithReset*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGraphAsymmErrorsWithReset G__TTGraphAsymmErrorsWithReset;
static int G__StFcsWaveformFitMaker_Cint_635_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGraphAsymmErrorsWithReset*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGraphAsymmErrorsWithReset*) (soff+(sizeof(TGraphAsymmErrorsWithReset)*i)))->~G__TTGraphAsymmErrorsWithReset();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGraphAsymmErrorsWithReset*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGraphAsymmErrorsWithReset*) (soff))->~G__TTGraphAsymmErrorsWithReset();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StFcsWaveformFitMaker_Cint_635_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGraphAsymmErrorsWithReset* dest = (TGraphAsymmErrorsWithReset*) G__getstructoffset();
   *dest = *(TGraphAsymmErrorsWithReset*) libp->para[0].ref;
   const TGraphAsymmErrorsWithReset& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* PeakWindow */

/* PeakAnaPainter */

/* PeakAna */

/* StFcsPulseAna */

/* StFcsWaveformFitMaker */

/* TGraphAsymmErrorsWithReset */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStFcsWaveformFitMaker_Cint {
 public:
  G__Sizep2memfuncStFcsWaveformFitMaker_Cint(): p(&G__Sizep2memfuncStFcsWaveformFitMaker_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStFcsWaveformFitMaker_Cint::*p)();
};

size_t G__get_sizep2memfuncStFcsWaveformFitMaker_Cint()
{
  G__Sizep2memfuncStFcsWaveformFitMaker_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStFcsWaveformFitMaker_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow))) {
     PeakWindow *G__Lderived;
     G__Lderived=(PeakWindow*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna))) {
     PeakAna *G__Lderived;
     G__Lderived=(PeakAna*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna))) {
     StFcsPulseAna *G__Lderived;
     G__Lderived=(StFcsPulseAna*)0x1000;
     {
       PeakAna *G__Lpbase=(PeakAna*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsWaveformFitMaker))) {
     StFcsWaveformFitMaker *G__Lderived;
     G__Lderived=(StFcsWaveformFitMaker*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsWaveformFitMaker),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsWaveformFitMaker),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsWaveformFitMaker),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsWaveformFitMaker),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset))) {
     TGraphAsymmErrorsWithReset *G__Lderived;
     G__Lderived=(TGraphAsymmErrorsWithReset*)0x1000;
     {
       TGraphAsymmErrors *G__Lpbase=(TGraphAsymmErrors*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrors),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGraph *G__Lpbase=(TGraph*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraph),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset),G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStFcsWaveformFitMaker_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Style_t",115,-1,0,-1);
   G__setnewtype(-1,"Style number (short)",0);
   G__search_typename2("Width_t",115,-1,0,-1);
   G__setnewtype(-1,"Line width (short)",0);
   G__search_typename2("Color_t",115,-1,0,-1);
   G__setnewtype(-1,"Color number (short)",0);
   G__search_typename2("Size_t",102,-1,0,-1);
   G__setnewtype(-1,"Attribute size (float)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PeakWindow>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEPeakWindowcOallocatorlEPeakWindowgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEPeakWindowcOallocatorlEPeakWindowgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEPeakWindowcOallocatorlEPeakWindowgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEPeakWindowcOallocatorlEPeakWindowgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEPeakWindowcOallocatorlEPeakWindowgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<int,int> >",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,int> >",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,int> >",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* PeakWindow */
static void G__setup_memvarPeakWindow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow));
   { PeakWindow *p; p=(PeakWindow*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mStartX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mStartX=",0,"!< x value for start of the peak window");
   G__memvar_setup((void*)((long)(&p->mEndX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mEndX=",0,"!< x value for end of the peak window");
   G__memvar_setup((void*)((long)(&p->mStartY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mStartY=",0,"!< y value associated with #mStartX");
   G__memvar_setup((void*)((long)(&p->mEndY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mEndY=",0,"!< y value associated with #mEndX");
   G__memvar_setup((void*)((long)(&p->mP_Peak)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mP_Peak=",0,"!< Point Number of peak in a TGraph object (P for point), point is such that slope with previous point will be positive and next point will be negative");
   G__memvar_setup((void*)((long)(&p->mPeakX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mPeakX=",0,"!< x-value of peak position as determined by #SetPeak()");
   G__memvar_setup((void*)((long)(&p->mPeakY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mPeakY=",0,"!< y-value at #mP_Peak");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TLine),-1,-1,2,"mStartLine=",0,"!< TLine for drawing the start of the peak window");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TMarker),-1,-1,2,"mPeakMarker=",0,"!< TMarker for drawing the peak location");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TLine),-1,-1,2,"mEndLine=",0,"!< TLine for drawing the end of the peak window");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PeakAnaPainter */
static void G__setup_memvarPeakAnaPainter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAnaPainter));
   { PeakAnaPainter *p; p=(PeakAnaPainter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TLine),-1,-1,2,"mTheBaseLine=",0,"!< line for the #PeakAna::mBaseline");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TLine),-1,-1,2,"mTheHitLine=",0,"!< threshold for a peak #PeakAna::mBaseline + #PeakAna::mBaselineSigma*#PeakAna::mBaselineSigmaScale");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna),-1,-1,2,"mPA=",0,"!< pointer to #PeakAna for drawing (PA=PeakAna)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TPaveText),-1,-1,2,"mPaveT_PA=",0,"!< for custom stats box");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TString),-1,-1,2,"mGraphOption=",0,"!< option for drawing the TGraph ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TString),-1,-1,2,"mPeakOption=",0,"!< option for drawing the peaks");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TString),-1,-1,2,"mStatsOption=",0,"!< option for what to put in stats box");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mDEBUG=",0,"!< debug level, 0=none");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PeakAna */
static void G__setup_memvarPeakAna(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna));
   { PeakAna *p; p=(PeakAna*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mComputedIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEPeakWindowcOallocatorlEPeakWindowgRsPgR),G__defined_typename("vector<PeakWindow>"),-1,2,"mPeaks=",0,"!< vector that stores all the found peaks in the data");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow),-1,-1,2,"mFoundPeak=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow),-1,-1,2,"mSearch=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mBaseline=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mBaselineSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mBaselineSigmaScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mMaxX=",0,"!< x-value where global maximum occurs");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mMaxY=",0,"!< y-value of global maximum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mDeltaX=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraph),-1,-1,2,"mG_Data=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mXRangeMin=",0,"!< Absolute possible x-value minimum of data");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mXRangeMax=",0,"!< Absolute possible x-value maximum of data");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mYRangeMin=",0,"!< Absolute possible y-value minimum of data");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mYRangeMax=",0,"!< Absolute possible y-value maximum of data");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mTunnelScale=",0,"!< Scale on exponential for determining tunneling probability (default is 1) see #PeakWindow::PeakTunelProb()");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mTunnelSigma=",0,"!< Sigma for Gaussian for determining tunneling probability (default is 1) see #PeakWindow::PeakTunelProb()");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mTunnelThreshold=",0,"!< Cutoff probability for peak tunneling method. If threshold less than 0 (default) then skip peak tunnel method, see #PeakTunnel()");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mChiralityPeakScale=",0,"how much to scale the slope of the line formed by the start and end points of the window");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mChiralityScale=",0,"modify whether peak position should be near start or end of peak window (see PeakWindow)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mChiralityProbScale=",0,"Scale for probablity ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mChiralityThreshold=",0,"Threshold chirality for peaks (if abs(chirality)>mChiralityThreshold merge +,- chirality)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"mFilter=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"mFilterWeights=",0,"!< Array of weights to use in filtering, size is 2*mFilterScale+1");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mFilterScale=",0,"!< How many points to group together when applying filter");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAnaPainter),-1,-1,2,"mPainter=",0,"!< Painter for this class");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TString),-1,-1,2,"mOption=",0,"!< Drawing option");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mDEBUG=",0,"!< debug level: 0 is none, 1 is info, 2 is verbose, 3 is deep");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mInternalSignal=",0,"!< If true will call delete on #mG_Data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StFcsPulseAna */
static void G__setup_memvarStFcsPulseAna(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna));
   { StFcsPulseAna *p; p=(StFcsPulseAna*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsDbPulse),-1,-1,2,"mDbPulse=",0,"!< Pointer to #StFcsDbPulse");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1_Baseline=",0,"!< Histogram that holds projection of mG_Data for baseline determination");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TF1),-1,-1,2,"mF1_SignalFit=",0,"!< Function to fit to the data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TF1),-1,-1,2,"mF1_BaselineFit=",0,"!< Gaussian function to fit to #mH1_Baseline to determine baseline");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_string),-1,-1,4,"mName=",0,"!< Name of class");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mWindowSum=",0,"!< true if a sum using #SumWindow() was called");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mFitSum=",0,"!< true if any sum method that uses fitting was called");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mSumAdc=",0,"!< holds the value from #SumWindow() when it is called");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mSumAdcFit=",0,"!< holds the value from a fitting sum method when one is called");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StFcsWaveformFitMaker */
static void G__setup_memvarStFcsWaveformFitMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsWaveformFitMaker));
   { StFcsWaveformFitMaker *p; p=(StFcsWaveformFitMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,1,"mTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mTimeIntg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,1,"mTimeIntg[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClonesArray),-1,-1,2,"mChWaveData=",0,"!< Contains all graph data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna),-1,-1,2,"mPulseFit=",0,"!< Pointer to peak finder used by some analysis methods");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"mTest=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TFile),-1,-1,2,"mOutFile=",0,"!< Root output file for testing");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2_Dep0DepMod[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2_Sum8Dep0[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2_Sum8DepMod[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1_NPeaksAkio=",0,"!< Number of peaks found by #gausFit()");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1_NPeaksFilteredAkio=",0,"!< Number of peaks found by #gausFit() for signals that had a triggered crossing");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2F_AdcTbAkio[6]=",0,"!< Adc vs. Tb for different number of peaks Akio method");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2F_AdcTbMine[6]=",0,"!< Adc vs. Tb for different number of peaks my method");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2F_AdcTbValidPeak[7]=",0,"!< Adc vs. Tb from my algorithm that had a peak at #mCenterTb (Need an extra one for non-valid peaks)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2F_SumFitvSumWin[6]=",0,"!< Sum from Akio's Fit function vs. Sum from my found peak window for different number of peaks");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2F_APeakvMPeak[6]=",0,"!< PeakLocations from Akio vs. Mine");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1F_PeakStart[6]=",0,"!< #PeakWindow Starting x-values");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1F_PeakEnd[6]=",0,"!< #PeakWindow Ending x-values");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1_PeakTiming=",0,"!< Timing for just peak finding.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1F_NPeaks[7]=",0,"!< Number of peaks found by peak finder #StFcsPulseAna");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1F_NPeaksFiltered[7]=",0,"!< Number of peaks for cases where a peak around #mCenterTB was found");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2_NPeakvsPeakXdiff=",0,"!< Number of peaks vs. Peak X diff");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2_NPeakvsPeakYratio=",0,"!< Number of peaks vs. Peak Y ratio");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1_VOverlap=",0,"!< Value of overlap");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2_NOvsNPeaks=",0,"!< NO (Number of overlaps) vs. Number of peaks");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2_VvsNOverlap=",0,"!< Compare value for that peak comparison vs. Overlap index");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2F_NOvsId[6]=",0,"!< NO (number of overlaps) vs channel id for the 6 detector ids");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1F_Res0[7]=",0,"!< Histogram of all res[0] regardless of method");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1F_Res0Zoom[7]=",0,"!< Histogram of all res[0] with finer bining at low end");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1F_Sum8Res0[7]=",0,"!< Histogram of \"res[0]\" using sum8 regardless of method called");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1F_Sum8Res0Zoom[7]=",0,"!< same as #mH1F_Sum8Res0 with finer bining at low end");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1F_FitRes0[7]=",0,"!< Histogram of \"res[0]\" from fit regardless of method called");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1F_FitRes0Zoom[7]=",0,"!< same as #mH1F_FitRes0 with finer bining at low end");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2F_Sum8vFit[7]=",0,"!< Histograms of Fit res[0] vs. sum8 res[0]     ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1_TimeFitPulse=",0,"!< Histogram to time how long just the fitting takes in #PulseFit1() and #PulseFit2()");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2_HeightvsSigma=",0,"!< Histogram of all fitted peak heights vs. their sigma");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2_HeightvsSigmaTrig=",0,"!< Histogram of height of fitted peaks in triggered crossing vs. their sigma");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1_ChiNdf=",0,"!< Histogram of chi^2/ndf for all fits");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2_HeightvsChiNdf=",0,"!< Histogram of height vs. chi^2/ndf for all fits");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2_MeanvsChiNdf=",0,"!< Histogram of height vs. chi^2/ndf for all fits");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2_SigmavsChiNdf=",0,"!< Histogram of chi^2/ndf for all fits");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1_PeakTimingGaus=",0,"!< Histogram to test timing of #gausFit()");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F),-1,-1,2,"mH1_PeakTimingPuls=",0,"!< Histogram to test timing of #PulseFit1()");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH2F),-1,-1,2,"mH2_PeakTimingCompare=",0,"!< Histogram to test timing between #PulseFit1() vs. #gausFit()");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsDb),-1,-1,4,"mDb=",0,"!< pointer to fcsDb");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsDbPulse),-1,-1,4,"mDbPulse=",0,"!< pointer to fcsPulse");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsCollection),-1,-1,4,"mFcsCollection=",0,"!< pointer to fcsCollection");
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"mHitIdx=",0,"!< running index for #mChWaveData, needed to keep saved channel information in the array as small as needed");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"mMeasureTime=",0,"!< output file for measuring fitting time");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mEnergySelect[3]=",0,"!< 0=MC (straight from dE), >0 see #analyzeWaveform()");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mAnaWaveform=",0,"!< if true (default) call #anlayzeWaveform() to integrate the waveform data, if false read integral from StFcsHit and only recompute energy using gain, and gain correction factors");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mCenterTB=",0,"!< center timebin for triggered crossing");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMinTB=",0,"!< center timebin for triggered crossing");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMaxTB=",0,"!< center timebin for triggered crossing");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mError=",0,"!< error to be used for none saturated timebin ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mErrorSaturated=",0,"!< upper error to be used for saturated timebin ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mAdcSaturation=",0,"!< above this, upper error will be enlarged");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPedMin=",0,"!< min TB for ped");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPedMax=",0,"!< max TB for ped");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMinAdc=",0,"!< minimum adc to be a peak");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mTail=",0,"!< pulse tail shape (0=none, 1=summer2020) ");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMaxPeak=",0,"!< max number of peak for trying to fit in #gausFit() and #PulseFit2(), if number of peaks >= #mMaxPeak do #sum8()");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TCanvas),-1,-1,4,"mCanvas=",0,"!< Canvas to draw channels on when drawing events");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPage=",0,"!< Counter for canvas page that will be drawn");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPad=",0,"!< Counter for canvas pad that will be drawn");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMaxPage=",0,"!< Max pages to draw for #mCanvas");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mSkip=",0,"!< Number of channels to skip when drawing channels on canvas");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"mFilename=",0,"!< Name of file to save canvas on, exclude file extension, pdf by default");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"mFilter=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"mDetName[100]=",0,"!< Persistant array that will be used to set the detector name of the TGraph object");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mFitDrawOn=",0,"!< Flag to indicate how many channels data to save in #mChWaveData, 0=none, 1=all, 2=MAXPAD");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGraphAsymmErrorsWithReset */
static void G__setup_memvarTGraphAsymmErrorsWithReset(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset));
   { TGraphAsymmErrorsWithReset *p; p=(TGraphAsymmErrorsWithReset*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStFcsWaveformFitMaker_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncPeakWindow(void) {
   /* PeakWindow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow));
   G__memfunc_setup("PeakWindow",1017,G__StFcsWaveformFitMaker_Cint_260_0_1, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakWindow",1017,G__StFcsWaveformFitMaker_Cint_260_0_2, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end", "!< Construct with known start and end points, peak gets set to imposible values", (void*) NULL, 0);
   G__memfunc_setup("PeakWindow",1017,G__StFcsWaveformFitMaker_Cint_260_0_3, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow), -1, 0, 1, 1, 1, 0, "u 'PeakWindow' - 11 - oldpeak", "!< Copy Constructor", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StFcsWaveformFitMaker_Cint_260_0_4, 117, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow), -1, 1, 1, 1, 1, 0, "u 'PeakWindow' - 11 - rhs", "!< Assignment operator", (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", "!< Only copies variables, to copy TLines use #Clone()", (void*) NULL, 1);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 '\"\"' newname", "!< Clone whole object, name is irrelevant", (void*) NULL, 1);
   G__memfunc_setup("SetWindow",932,G__StFcsWaveformFitMaker_Cint_260_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - s d - 'Double_t' 0 - e", "!< @param s set x-value for start of peak @param e set x-value for end of peak", (void*) NULL, 0);
   G__memfunc_setup("GetWindow",920,G__StFcsWaveformFitMaker_Cint_260_0_8, 121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - s d - 'Double_t' 1 - e", "!< @param s get x-value for start of peak @param e get x-value for end of peak", (void*) NULL, 0);
   G__memfunc_setup("SetPeak",685,G__StFcsWaveformFitMaker_Cint_260_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGraph' - 0 - gdata", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Combine",701,G__StFcsWaveformFitMaker_Cint_260_0_10, 117, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow), -1, 0, 3, 3, 1, 0, 
"u 'PeakWindow' - 11 - leftpeak u 'PeakWindow' - 11 - rightpeak "
"g - - 0 'true' keepleft", (char*)NULL, (void*) G__func2void( (PeakWindow (*)(const PeakWindow&, const PeakWindow&, bool))(&PeakWindow::Combine) ), 0);
   G__memfunc_setup("Combine",701,G__StFcsWaveformFitMaker_Cint_260_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'PeakWindow' - 11 - other g - - 0 'true' keepthis", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CompareTo",906,G__StFcsWaveformFitMaker_Cint_260_0_12, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "u 'PeakWindow' - 11 - other", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StartEndLineSlope",1712,G__StFcsWaveformFitMaker_Cint_260_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< Computes the slope of the line formed by the points (#mStartX,#mStartY) and (#mEndX,#mEndY)", (void*) NULL, 0);
   G__memfunc_setup("StartEndSlopeUncertainty",2494,G__StFcsWaveformFitMaker_Cint_260_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - sigma", "!< Uncertainty int the slope of the line formed by the points (#mStartX,#mStartY) and (#mEndX,#mEndY)", (void*) NULL, 0);
   G__memfunc_setup("StartEndLineYint",1617,G__StFcsWaveformFitMaker_Cint_260_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< Computes the y-intercept of the line formed by the points (#mStartX,#mStartY) and (#mEndX,#mEndY)", (void*) NULL, 0);
   G__memfunc_setup("MidPoint",804,G__StFcsWaveformFitMaker_Cint_260_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "U 'TGraph' - 0 '0' graph", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlopeChirality",1452,G__StFcsWaveformFitMaker_Cint_260_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - scale", "function to compute chirality factor for startendslope", (void*) NULL, 1);
   G__memfunc_setup("PeakChirality",1322,G__StFcsWaveformFitMaker_Cint_260_0_18, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - slopescale d - 'Double_t' 0 - peakscale", "for peakscale 1 means peak is centered in window, peakscale>1 peak center shifted towards start, peakscale<1 peak center shifted towards end (peakscale>0)", (void*) NULL, 1);
   G__memfunc_setup("PeakChiralityProb",1725,G__StFcsWaveformFitMaker_Cint_260_0_19, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - probscale d - 'Double_t' 0 - chirality", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PeakChiralityProb",1725,G__StFcsWaveformFitMaker_Cint_260_0_20, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"d - 'Double_t' 0 - probscale d - 'Double_t' 0 - peakscale "
"d - 'Double_t' 0 - chirscale", "Returns probabilty not to merge or probabilty is a \"real\" peak", (void*) NULL, 1);
   G__memfunc_setup("PeakTunnelProb",1418,G__StFcsWaveformFitMaker_Cint_260_0_21, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"U 'TGraph' - 0 - graph d - 'Double_t' 0 '1.0' scale "
"d - 'Double_t' 0 '1.0' sigma", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__StFcsWaveformFitMaker_Cint_260_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end", "!< Reset #PeakWindow to constructor state", (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", "!< Prints information about PeakWindow", (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", "!< paint method see #Draw() for options", (void*) NULL, 1);
   G__memfunc_setup("GetStartLine",1206,G__StFcsWaveformFitMaker_Cint_260_0_26, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TLine), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '0' ymin d - 'Double_t' 0 '0' ymax", "!< Create and return a TLine for the start of the peak window", (void*) NULL, 0);
   G__memfunc_setup("GetStartLineColor",1717,G__StFcsWaveformFitMaker_Cint_260_0_27, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartLineStyle",1735,G__StFcsWaveformFitMaker_Cint_260_0_28, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartLineWidth",1718,G__StFcsWaveformFitMaker_Cint_260_0_29, 115, -1, G__defined_typename("Width_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStartLineColor",1729,G__StFcsWaveformFitMaker_Cint_260_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStartLineColorAlpha",2215,G__StFcsWaveformFitMaker_Cint_260_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - color f - 'Float_t' 0 - alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStartLineStyle",1747,G__StFcsWaveformFitMaker_Cint_260_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStartLineWidth",1730,G__StFcsWaveformFitMaker_Cint_260_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeakMarker",1283,G__StFcsWaveformFitMaker_Cint_260_0_34, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TMarker), -1, 0, 0, 1, 1, 0, "", "!< Create and return a TMarker to mark the location of the peak", (void*) NULL, 0);
   G__memfunc_setup("GetPeakMarkerColor",1794,G__StFcsWaveformFitMaker_Cint_260_0_35, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeakMarkerStyle",1812,G__StFcsWaveformFitMaker_Cint_260_0_36, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeakMarkerSize",1694,G__StFcsWaveformFitMaker_Cint_260_0_37, 102, -1, G__defined_typename("Size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakMarkerColor",1806,G__StFcsWaveformFitMaker_Cint_260_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakMarkerColorAlpha",2292,G__StFcsWaveformFitMaker_Cint_260_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - color f - 'Float_t' 0 - alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakMarkerStyle",1824,G__StFcsWaveformFitMaker_Cint_260_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakMarkerSize",1706,G__StFcsWaveformFitMaker_Cint_260_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Size_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEndLine",959,G__StFcsWaveformFitMaker_Cint_260_0_42, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TLine), -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '0' ymin d - 'Double_t' 0 '0' ymax", "!< Create and return a TLine for the end of the peak window", (void*) NULL, 0);
   G__memfunc_setup("GetEndLineColor",1470,G__StFcsWaveformFitMaker_Cint_260_0_43, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEndLineStyle",1488,G__StFcsWaveformFitMaker_Cint_260_0_44, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEndLineWidth",1471,G__StFcsWaveformFitMaker_Cint_260_0_45, 115, -1, G__defined_typename("Width_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEndLineColor",1482,G__StFcsWaveformFitMaker_Cint_260_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEndLineColorAlpha",1968,G__StFcsWaveformFitMaker_Cint_260_0_47, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - color f - 'Float_t' 0 - alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEndLineStyle",1500,G__StFcsWaveformFitMaker_Cint_260_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEndLineWidth",1483,G__StFcsWaveformFitMaker_Cint_260_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StFcsWaveformFitMaker_Cint_260_0_50, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PeakWindow::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFcsWaveformFitMaker_Cint_260_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PeakWindow::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFcsWaveformFitMaker_Cint_260_0_52, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PeakWindow::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFcsWaveformFitMaker_Cint_260_0_53, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PeakWindow::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFcsWaveformFitMaker_Cint_260_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFcsWaveformFitMaker_Cint_260_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PeakWindow::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFcsWaveformFitMaker_Cint_260_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PeakWindow::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFcsWaveformFitMaker_Cint_260_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PeakWindow::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFcsWaveformFitMaker_Cint_260_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PeakWindow::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~PeakWindow", 1143, G__StFcsWaveformFitMaker_Cint_260_0_62, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPeakAnaPainter(void) {
   /* PeakAnaPainter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAnaPainter));
   G__memfunc_setup("PeakAnaPainter",1380,G__StFcsWaveformFitMaker_Cint_261_0_1, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAnaPainter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Paint",508,G__StFcsWaveformFitMaker_Cint_261_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PaintRawData",1184,G__StFcsWaveformFitMaker_Cint_261_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Raw data with no modifications", (void*) NULL, 1);
   G__memfunc_setup("PaintFoundPeak",1401,G__StFcsWaveformFitMaker_Cint_261_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Raw data inside zoomed in on found signal region", (void*) NULL, 1);
   G__memfunc_setup("PaintFoundPeakQa",1579,G__StFcsWaveformFitMaker_Cint_261_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Draw signal and found signal window", (void*) NULL, 1);
   G__memfunc_setup("PaintPeakQa",1071,G__StFcsWaveformFitMaker_Cint_261_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Show all found signal windows and signal", (void*) NULL, 1);
   G__memfunc_setup("PaintBaselines",1426,G__StFcsWaveformFitMaker_Cint_261_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Just draw the baseline and hitlines", (void*) NULL, 1);
   G__memfunc_setup("PaintFoundRange",1509,G__StFcsWaveformFitMaker_Cint_261_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Just draw the found peak on the current pad", (void*) NULL, 1);
   G__memfunc_setup("PaintPeakRanges",1501,G__StFcsWaveformFitMaker_Cint_261_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Draw all found peaks on the current pad", (void*) NULL, 1);
   G__memfunc_setup("PaintStats",1035,G__StFcsWaveformFitMaker_Cint_261_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Draw Stats box for peak finding", (void*) NULL, 1);
   G__memfunc_setup("CleanPainter",1206,G__StFcsWaveformFitMaker_Cint_261_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Clean up internal objects", (void*) NULL, 1);
   G__memfunc_setup("SetPeakAna",957,G__StFcsWaveformFitMaker_Cint_261_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'PeakAna' - 0 - ana", "!< @param ana set the #PeakAna object to paint", (void*) NULL, 1);
   G__memfunc_setup("GetBaseLineColor",1570,G__StFcsWaveformFitMaker_Cint_261_0_13, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBaseLineStyle",1588,G__StFcsWaveformFitMaker_Cint_261_0_14, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBaseLineWidth",1571,G__StFcsWaveformFitMaker_Cint_261_0_15, 115, -1, G__defined_typename("Width_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitLineColor",1484,G__StFcsWaveformFitMaker_Cint_261_0_16, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitLineStyle",1502,G__StFcsWaveformFitMaker_Cint_261_0_17, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitLineWidth",1485,G__StFcsWaveformFitMaker_Cint_261_0_18, 115, -1, G__defined_typename("Width_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBaseLineColor",1582,G__StFcsWaveformFitMaker_Cint_261_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - color", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBaseLineColorAlpha",2068,G__StFcsWaveformFitMaker_Cint_261_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - color f - 'Float_t' 0 - alpha", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBaseLineStyle",1600,G__StFcsWaveformFitMaker_Cint_261_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - style", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBaseLineWidth",1583,G__StFcsWaveformFitMaker_Cint_261_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - width", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHitLineColor",1496,G__StFcsWaveformFitMaker_Cint_261_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - color", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHitLineColorAlpha",1982,G__StFcsWaveformFitMaker_Cint_261_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - color f - 'Float_t' 0 - alpha", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHitLineStyle",1514,G__StFcsWaveformFitMaker_Cint_261_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - style", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHitLineWidth",1497,G__StFcsWaveformFitMaker_Cint_261_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - width", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ValidGraph",994,G__StFcsWaveformFitMaker_Cint_261_0_27, 103, -1, -1, 0, 0, 1, 1, 0, "", "!< Check if #PeakAna object loaded and has a non-zero TGraph", (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "!< Initialize internal variables to null", (void*) NULL, 0);
   G__memfunc_setup("MakePaveText",1199,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TPaveText), -1, 0, 4, 1, 2, 0, 
"d - 'Double_t' 0 '0.7' xmin d - 'Double_t' 0 '0.5' ymin "
"d - 'Double_t' 0 '1.0' xmax d - 'Double_t' 0 '1.0' ymax", "!< Makes the stats box to show peak infomation", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StFcsWaveformFitMaker_Cint_261_0_30, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PeakAnaPainter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFcsWaveformFitMaker_Cint_261_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PeakAnaPainter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFcsWaveformFitMaker_Cint_261_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PeakAnaPainter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFcsWaveformFitMaker_Cint_261_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PeakAnaPainter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StFcsWaveformFitMaker_Cint_261_0_34, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StFcsWaveformFitMaker_Cint_261_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StFcsWaveformFitMaker_Cint_261_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFcsWaveformFitMaker_Cint_261_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFcsWaveformFitMaker_Cint_261_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PeakAnaPainter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFcsWaveformFitMaker_Cint_261_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PeakAnaPainter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFcsWaveformFitMaker_Cint_261_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PeakAnaPainter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFcsWaveformFitMaker_Cint_261_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PeakAnaPainter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PeakAnaPainter", 1380, G__StFcsWaveformFitMaker_Cint_261_0_42, (int) ('i'), G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAnaPainter), -1, 0, 1, 1, 1, 0, "u 'PeakAnaPainter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PeakAnaPainter", 1506, G__StFcsWaveformFitMaker_Cint_261_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StFcsWaveformFitMaker_Cint_261_0_44, (int) ('u'), G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAnaPainter), -1, 1, 1, 1, 1, 0, "u 'PeakAnaPainter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPeakAna(void) {
   /* PeakAna */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna));
   G__memfunc_setup("PeakAna",657,G__StFcsWaveformFitMaker_Cint_262_0_1, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna), -1, 0, 0, 1, 1, 0, "", "!< Default constructor that always creates a new TGraph", (void*) NULL, 0);
   G__memfunc_setup("PeakAna",657,G__StFcsWaveformFitMaker_Cint_262_0_2, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna), -1, 0, 3, 1, 1, 0, 
"i - - 0 - size D - - 0 - xvals "
"D - - 0 - yvals", "!< Constructor using array of x and y values with known size", (void*) NULL, 0);
   G__memfunc_setup("PeakAna",657,G__StFcsWaveformFitMaker_Cint_262_0_3, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna), -1, 0, 1, 1, 1, 0, "U 'TGraph' - 0 - Sig", "!< Constructor with a known TGraph", (void*) NULL, 0);
   G__memfunc_setup("PeakAna",657,G__StFcsWaveformFitMaker_Cint_262_0_4, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna), -1, 0, 1, 1, 1, 0, "U 'TH1' - 0 - hist", "!< Constructor with a histogram, histogram gets converted to graph object", (void*) NULL, 0);
   G__memfunc_setup("PeakAna",657,G__StFcsWaveformFitMaker_Cint_262_0_5, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna), -1, 0, 2, 1, 1, 0, 
"u 'PeakAna' - 11 - OldAna U 'TGraph' - 0 '0' graph", "!< Copy constructor can be called with a new graph", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StFcsWaveformFitMaker_Cint_262_0_6, 117, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna), -1, 1, 1, 1, 1, 0, "u 'PeakAna' - 11 - rhs", "!< Assignment operator doesn't clone graph", (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", "!< Internal method use Clone instead.", (void*) NULL, 1);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", "!< Clones internal graph as opposed to just copying the pointer", (void*) NULL, 1);
   G__memfunc_setup("AddPeakStats",1177,G__StFcsWaveformFitMaker_Cint_262_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TPaveText' - 0 - pave C - - 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConvertHistToGraph",1838,G__StFcsWaveformFitMaker_Cint_262_0_10, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraph), -1, 0, 2, 3, 1, 0, 
"U 'TH1' - 0 - graph h - 'UInt_t' 0 '1' numavgs", (char*)NULL, (void*) G__func2void( (TGraph* (*)(TH1*, UInt_t))(&PeakAna::ConvertHistToGraph) ), 0);
   G__memfunc_setup("ConvertPeaksToGraph",1930,G__StFcsWaveformFitMaker_Cint_262_0_11, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraph), -1, 0, 1, 3, 1, 0, "u 'vector<PeakWindow,allocator<PeakWindow> >' 'vector<PeakWindow>' 11 - Peaks", (char*)NULL, (void*) G__func2void( (TGraph* (*)(const vector<PeakWindow>&))(&PeakAna::ConvertPeaksToGraph) ), 0);
   G__memfunc_setup("ConvertPeaksToGraph",1930,G__StFcsWaveformFitMaker_Cint_262_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< same as #ConvertPeaksToGraph() but creates a new graph that replaces old one", (void*) NULL, 0);
   G__memfunc_setup("ConvertPeaksToAna",1704,G__StFcsWaveformFitMaker_Cint_262_0_13, 117, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna), -1, 0, 1, 3, 1, 0, "u 'PeakAna' - 11 - Ana", "!< same as #ConvertPeaksToGraph() but returns a new PeakAna with same settings without modifying old one", (void*) G__func2void( (PeakAna (*)(const PeakAna&))(&PeakAna::ConvertPeaksToAna) ), 0);
   G__memfunc_setup("ConvertPeaksToAna",1704,G__StFcsWaveformFitMaker_Cint_262_0_14, 117, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna), -1, 0, 0, 1, 1, 0, "", "!< same as #ConvertPeaksToAna() but returns new PeakAna with same settings without modifying current one", (void*) NULL, 0);
   G__memfunc_setup("GetPossiblePeaks",1621,G__StFcsWaveformFitMaker_Cint_262_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SearchForPeak",1278,G__StFcsWaveformFitMaker_Cint_262_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'vector<PeakWindow,allocator<PeakWindow> >' 'vector<PeakWindow>' 11 - PossiblePeaks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SearchForPeak",1278,G__StFcsWaveformFitMaker_Cint_262_0_17, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'vector<PeakWindow,allocator<PeakWindow> >' 'vector<PeakWindow>' 11 - PossiblePeaks u 'PeakWindow' - 11 - search", "!< same as #SearchForPeak() but and set search criteria using #PeakWindow", (void*) NULL, 0);
   G__memfunc_setup("SearchForPeak",1278,G__StFcsWaveformFitMaker_Cint_262_0_18, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"u 'vector<PeakWindow,allocator<PeakWindow> >' 'vector<PeakWindow>' 11 - PossiblePeaks d - 'Double_t' 0 - peak "
"d - 'Double_t' 0 - width", "!< same as #SearchForPeak() and set search window by peak location and width", (void*) NULL, 0);
   G__memfunc_setup("AnalyzeForPeak",1404,G__StFcsWaveformFitMaker_Cint_262_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AnalyzeForPeak",1404,G__StFcsWaveformFitMaker_Cint_262_0_20, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - peak d - 'Double_t' 0 - width", "<! same as #AnalyzeForPeak() but also sets search parameters for peak", (void*) NULL, 1);
   G__memfunc_setup("AnalyzeForNoisyPeak",1934,G__StFcsWaveformFitMaker_Cint_262_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "<! First calls #ConvertToAna() function and then #AnalyzeForPeak() on the converted data", (void*) NULL, 1);
   G__memfunc_setup("MergeByProbability",1836,G__StFcsWaveformFitMaker_Cint_262_0_22, 121, -1, -1, 0, 1, 1, 1, 8, "u 'vector<PeakWindow,allocator<PeakWindow> >' 'vector<PeakWindow>' 1 - newpeaks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MergeByChirality",1620,G__StFcsWaveformFitMaker_Cint_262_0_23, 121, -1, -1, 0, 1, 1, 1, 8, "u 'vector<PeakWindow,allocator<PeakWindow> >' 'vector<PeakWindow>' 1 - newpeaks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MergeLeftOrRight",1594,G__StFcsWaveformFitMaker_Cint_262_0_24, 115, -1, -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Baseline",803,G__StFcsWaveformFitMaker_Cint_262_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< @return #mBaseline", (void*) NULL, 0);
   G__memfunc_setup("BaselineSigma",1300,G__StFcsWaveformFitMaker_Cint_262_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< @return fabs(#mBaselineSigma)  ", (void*) NULL, 0);
   G__memfunc_setup("BaselineSigmaScale",1788,G__StFcsWaveformFitMaker_Cint_262_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< @return #mBaselineSigmaScale", (void*) NULL, 0);
   G__memfunc_setup("MinX",380,G__StFcsWaveformFitMaker_Cint_262_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< @return #mXRangeMin", (void*) NULL, 0);
   G__memfunc_setup("MinY",381,G__StFcsWaveformFitMaker_Cint_262_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< @return #mYRangeMin", (void*) NULL, 0);
   G__memfunc_setup("MaxX",382,G__StFcsWaveformFitMaker_Cint_262_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< @return #mXRangeMax", (void*) NULL, 0);
   G__memfunc_setup("MaxY",383,G__StFcsWaveformFitMaker_Cint_262_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< @return #mYRangeMax", (void*) NULL, 0);
   G__memfunc_setup("SearchPeak",983,G__StFcsWaveformFitMaker_Cint_262_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< @return expected peak location for searching", (void*) NULL, 0);
   G__memfunc_setup("SearchWidth",1110,G__StFcsWaveformFitMaker_Cint_262_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< @return width from expected peak location to search", (void*) NULL, 0);
   G__memfunc_setup("TunnelScale",1118,G__StFcsWaveformFitMaker_Cint_262_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< @return #mTunnelScale", (void*) NULL, 0);
   G__memfunc_setup("TunnelSigma",1127,G__StFcsWaveformFitMaker_Cint_262_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< @return #mTunnelSigma", (void*) NULL, 0);
   G__memfunc_setup("TunnelThreshold",1571,G__StFcsWaveformFitMaker_Cint_262_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "!< @return #mTunnelThreshold", (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Paint",508,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", "<! see #Draw() for options", (void*) NULL, 1);
   G__memfunc_setup("GetPainter",1011,G__StFcsWaveformFitMaker_Cint_262_0_39, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAnaPainter), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", "<! Creates a #PeakAnaPainter if one doesn't exist @return #mPainter", (void*) NULL, 0);
   G__memfunc_setup("ForceInternal",1324,G__StFcsWaveformFitMaker_Cint_262_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", "<! Call this when you need to tell this class to delete the internal TGraph object", (void*) NULL, 0);
   G__memfunc_setup("GausFilter",1014,G__StFcsWaveformFitMaker_Cint_262_0_41, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' sizeavgs g - - 0 'true' copy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoodWindow",1025,G__StFcsWaveformFitMaker_Cint_262_0_42, 103, -1, -1, 0, 0, 1, 1, 0, "", "!< Check if found peak is inside #mXRangeMin, #mYRangeMin, #mXRangeMax, #mYRangeMax and has logical values", (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__StFcsWaveformFitMaker_Cint_262_0_43, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraph), -1, 0, 0, 1, 1, 8, "", "!< @return #mG_Data", (void*) NULL, 1);
   G__memfunc_setup("GetDebug",775,G__StFcsWaveformFitMaker_Cint_262_0_44, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", "!< @return #mDEBUG", (void*) NULL, 0);
   G__memfunc_setup("GetPeak",673,G__StFcsWaveformFitMaker_Cint_262_0_45, 117, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - peakidx", "!< @return peak at index peakidx ", (void*) NULL, 0);
   G__memfunc_setup("GetPeak",673,G__StFcsWaveformFitMaker_Cint_262_0_46, 117, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakWindow), -1, 1, 1, 1, 1, 0, "h - 'UInt_t' 0 - peakidx", "!< @return peak at index peakidx", (void*) NULL, 0);
   G__memfunc_setup("GetFilter",902,G__StFcsWaveformFitMaker_Cint_262_0_47, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", "!< @return #mFilter", (void*) NULL, 0);
   G__memfunc_setup("GetFilterScale",1390,G__StFcsWaveformFitMaker_Cint_262_0_48, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", "!< @return #mFilterScale", (void*) NULL, 0);
   G__memfunc_setup("FoundPeakIndex",1397,G__StFcsWaveformFitMaker_Cint_262_0_49, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", "!< @return #mComputedIndex", (void*) NULL, 0);
   G__memfunc_setup("GetXYMax",759,G__StFcsWaveformFitMaker_Cint_262_0_50, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - xmax", "!< Finds and sets #mMaxX and #mMaxY", (void*) NULL, 1);
   G__memfunc_setup("MaxXval",705,G__StFcsWaveformFitMaker_Cint_262_0_51, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "!< @return #mMaxX", (void*) NULL, 0);
   G__memfunc_setup("MaxYval",706,G__StFcsWaveformFitMaker_Cint_262_0_52, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "!< @return #mMaxY", (void*) NULL, 0);
   G__memfunc_setup("MeanFilter",999,G__StFcsWaveformFitMaker_Cint_262_0_53, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_PeakAna), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' sizeavgs g - - 0 'true' copy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NPeaks",578,G__StFcsWaveformFitMaker_Cint_262_0_54, 105, -1, -1, 0, 0, 1, 1, 8, "", "!< @return size of #mPeaks", (void*) NULL, 0);
   G__memfunc_setup("ValidPeakIdx",1174,G__StFcsWaveformFitMaker_Cint_262_0_55, 103, -1, -1, 0, 0, 1, 1, 8, "", "!< @return true if 0<= #mComputedIndex < mPeaks.size(), false otherwise", (void*) NULL, 0);
   G__memfunc_setup("PeakStart",911,G__StFcsWaveformFitMaker_Cint_262_0_56, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "!< Found Signal starting x-value", (void*) NULL, 0);
   G__memfunc_setup("PeakEnd",664,G__StFcsWaveformFitMaker_Cint_262_0_57, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "!< Found Signal ending x-value", (void*) NULL, 0);
   G__memfunc_setup("PeakX",473,G__StFcsWaveformFitMaker_Cint_262_0_58, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "!< x-value of found signal peak", (void*) NULL, 0);
   G__memfunc_setup("PeakY",474,G__StFcsWaveformFitMaker_Cint_262_0_59, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "!< y-value of found signal peak", (void*) NULL, 0);
   G__memfunc_setup("PeakXY",562,G__StFcsWaveformFitMaker_Cint_262_0_60, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - xval d - 'Double_t' 1 - yval", "!< get peak x, and y value directly by reference", (void*) NULL, 0);
   G__memfunc_setup("PeakTunnel",1015,G__StFcsWaveformFitMaker_Cint_262_0_61, 103, -1, -1, 0, 1, 1, 1, 8, "u 'PeakWindow' - 11 - window", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakProb",788,G__StFcsWaveformFitMaker_Cint_262_0_62, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"u 'PeakWindow' - 11 - window d - 'Double_t' 0 - scale "
"d - 'Double_t' 0 - sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", "!< Print peak information", (void*) NULL, 1);
   G__memfunc_setup("ResetPeak",900,G__StFcsWaveformFitMaker_Cint_262_0_64, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Resets values associated with peak finding", (void*) NULL, 0);
   G__memfunc_setup("SetDebug",787,G__StFcsWaveformFitMaker_Cint_262_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - level", "!< @param level sets debug level #mDEBUG", (void*) NULL, 0);
   G__memfunc_setup("SetData",678,G__StFcsWaveformFitMaker_Cint_262_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGraph' - 0 - graph", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetData",678,G__StFcsWaveformFitMaker_Cint_262_0_67, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - hist h - 'UInt_t' 0 '1' numavgs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBaseline",1103,G__StFcsWaveformFitMaker_Cint_262_0_68, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - base d - 'Double_t' 0 - sigma", "!< @param base sets #mBaseline @param sigma sets #mBaselineSigma", (void*) NULL, 0);
   G__memfunc_setup("SetBaselineSigmaScale",2088,G__StFcsWaveformFitMaker_Cint_262_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - scale", "!< @param scale sets #mBaselineSigmaScale", (void*) NULL, 0);
   G__memfunc_setup("SetContinuity",1378,G__StFcsWaveformFitMaker_Cint_262_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", "!< @param val sets #mDeltaX", (void*) NULL, 0);
   G__memfunc_setup("SetFilter",914,G__StFcsWaveformFitMaker_Cint_262_0_71, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - filter i - 'Int_t' 0 - scale "
"d - 'Double_t' 0 '0' sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRange",793,G__StFcsWaveformFitMaker_Cint_262_0_72, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - xmin d - 'Double_t' 0 - ymin "
"d - 'Double_t' 0 - xmax d - 'Double_t' 0 - ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSearchWindow",1530,G__StFcsWaveformFitMaker_Cint_262_0_73, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - peak d - 'Double_t' 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTunnelScale",1418,G__StFcsWaveformFitMaker_Cint_262_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - value", "!< @param value sets #mTunnelScale", (void*) NULL, 0);
   G__memfunc_setup("SetTunnelSigma",1427,G__StFcsWaveformFitMaker_Cint_262_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - value", "!< @param value sets #mTunnelSigma", (void*) NULL, 0);
   G__memfunc_setup("SetTunnelPars",1336,G__StFcsWaveformFitMaker_Cint_262_0_76, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - scale d - 'Double_t' 0 - sigma", "!< @param scale sets #mTunnelScale @param sigma sets #mTunnelSigma", (void*) NULL, 0);
   G__memfunc_setup("SetTunnelThreshold",1871,G__StFcsWaveformFitMaker_Cint_262_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - value", "!< @param value sets #mTunnelThreshold", (void*) NULL, 0);
   G__memfunc_setup("ChiralityPeakScale",1810,G__StFcsWaveformFitMaker_Cint_262_0_78, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChiralityScale",1425,G__StFcsWaveformFitMaker_Cint_262_0_79, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChiralityProbScale",1828,G__StFcsWaveformFitMaker_Cint_262_0_80, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChiralityThreshold",1878,G__StFcsWaveformFitMaker_Cint_262_0_81, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChiralityPeakScale",2110,G__StFcsWaveformFitMaker_Cint_262_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChiralityScale",1725,G__StFcsWaveformFitMaker_Cint_262_0_83, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChiralityProbScale",2128,G__StFcsWaveformFitMaker_Cint_262_0_84, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChiralityThreshold",2178,G__StFcsWaveformFitMaker_Cint_262_0_85, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeak",685,G__StFcsWaveformFitMaker_Cint_262_0_86, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - peakpoint d - 'Double_t' 10 - peakx", "!< Overwrite peak location in #mFoundpeak. WARNING doesn't set start and end values nor overwrite #mComputedIndex", (void*) NULL, 0);
   G__memfunc_setup("SetWindow",932,G__StFcsWaveformFitMaker_Cint_262_0_87, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - start i - 'Int_t' 10 - end", "!< Overwrite peak start and end values in #mFoundPeak. WARNING doesn't set peak values nor overwrite #mComputedIndex", (void*) NULL, 0);
   G__memfunc_setup("SetWindow",932,G__StFcsWaveformFitMaker_Cint_262_0_88, 121, -1, -1, 0, 1, 1, 1, 0, "u 'PeakWindow' - 0 - window", "!< Overwrite #mFoundPeak with a different #PeakWindow. WARNING doesn't overwrite #mComputedIndex", (void*) NULL, 0);
   G__memfunc_setup("GetLineColor",1191,G__StFcsWaveformFitMaker_Cint_262_0_89, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLineStyle",1209,G__StFcsWaveformFitMaker_Cint_262_0_90, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLineWidth",1192,G__StFcsWaveformFitMaker_Cint_262_0_91, 115, -1, G__defined_typename("Width_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFillColor",1190,G__StFcsWaveformFitMaker_Cint_262_0_92, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFillStyle",1208,G__StFcsWaveformFitMaker_Cint_262_0_93, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMarkerColor",1409,G__StFcsWaveformFitMaker_Cint_262_0_94, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMarkerSize",1309,G__StFcsWaveformFitMaker_Cint_262_0_95, 102, -1, G__defined_typename("Size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMarkerStyle",1427,G__StFcsWaveformFitMaker_Cint_262_0_96, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineColor",1203,G__StFcsWaveformFitMaker_Cint_262_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineColorAlpha",1689,G__StFcsWaveformFitMaker_Cint_262_0_98, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - color f - 'Float_t' 0 - alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineStyle",1221,G__StFcsWaveformFitMaker_Cint_262_0_99, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineWidth",1204,G__StFcsWaveformFitMaker_Cint_262_0_100, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillColor",1202,G__StFcsWaveformFitMaker_Cint_262_0_101, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillColorAlpha",1688,G__StFcsWaveformFitMaker_Cint_262_0_102, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - color f - 'Float_t' 0 - alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillStyle",1220,G__StFcsWaveformFitMaker_Cint_262_0_103, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMarkerColor",1421,G__StFcsWaveformFitMaker_Cint_262_0_104, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 '1' color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMarkerColorAlpha",1907,G__StFcsWaveformFitMaker_Cint_262_0_105, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - color f - 'Float_t' 0 - alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMarkerSize",1321,G__StFcsWaveformFitMaker_Cint_262_0_106, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Size_t' 0 '1' size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMarkerStyle",1439,G__StFcsWaveformFitMaker_Cint_262_0_107, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 '1' style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseLineColor",1570,G__StFcsWaveformFitMaker_Cint_262_0_108, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseLineStyle",1588,G__StFcsWaveformFitMaker_Cint_262_0_109, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseLineWidth",1571,G__StFcsWaveformFitMaker_Cint_262_0_110, 115, -1, G__defined_typename("Width_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitLineColor",1484,G__StFcsWaveformFitMaker_Cint_262_0_111, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitLineStyle",1502,G__StFcsWaveformFitMaker_Cint_262_0_112, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitLineWidth",1485,G__StFcsWaveformFitMaker_Cint_262_0_113, 115, -1, G__defined_typename("Width_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBaseLineColor",1582,G__StFcsWaveformFitMaker_Cint_262_0_114, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBaseLineColorAlpha",2068,G__StFcsWaveformFitMaker_Cint_262_0_115, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - color f - 'Float_t' 0 - alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBaseLineStyle",1600,G__StFcsWaveformFitMaker_Cint_262_0_116, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBaseLineWidth",1583,G__StFcsWaveformFitMaker_Cint_262_0_117, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitLineColor",1496,G__StFcsWaveformFitMaker_Cint_262_0_118, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitLineColorAlpha",1982,G__StFcsWaveformFitMaker_Cint_262_0_119, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - color f - 'Float_t' 0 - alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitLineStyle",1514,G__StFcsWaveformFitMaker_Cint_262_0_120, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitLineWidth",1497,G__StFcsWaveformFitMaker_Cint_262_0_121, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeakLineColorS",1659,G__StFcsWaveformFitMaker_Cint_262_0_122, 115, -1, G__defined_typename("Color_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - peakidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeakLineColorE",1645,G__StFcsWaveformFitMaker_Cint_262_0_123, 115, -1, G__defined_typename("Color_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - peakidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeakStyleS",1285,G__StFcsWaveformFitMaker_Cint_262_0_124, 115, -1, G__defined_typename("Style_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - peakidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeakStyleE",1271,G__StFcsWaveformFitMaker_Cint_262_0_125, 115, -1, G__defined_typename("Style_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - peakidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeakWidthS",1268,G__StFcsWaveformFitMaker_Cint_262_0_126, 115, -1, G__defined_typename("Width_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - peakidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeakWidthE",1254,G__StFcsWaveformFitMaker_Cint_262_0_127, 115, -1, G__defined_typename("Width_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - peakidx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFoundPeakLineColorS",2167,G__StFcsWaveformFitMaker_Cint_262_0_128, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFoundPeakLineColorE",2153,G__StFcsWaveformFitMaker_Cint_262_0_129, 115, -1, G__defined_typename("Color_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFoundPeakStyleS",1793,G__StFcsWaveformFitMaker_Cint_262_0_130, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFoundPeakStyleE",1779,G__StFcsWaveformFitMaker_Cint_262_0_131, 115, -1, G__defined_typename("Style_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFoundPeakWidthS",1776,G__StFcsWaveformFitMaker_Cint_262_0_132, 115, -1, G__defined_typename("Width_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFoundPeakWidthE",1762,G__StFcsWaveformFitMaker_Cint_262_0_133, 115, -1, G__defined_typename("Width_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFoundPeakLineColorS",2179,G__StFcsWaveformFitMaker_Cint_262_0_134, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - s_color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFoundPeakLineColorE",2165,G__StFcsWaveformFitMaker_Cint_262_0_135, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - e_color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFoundPeakLineColor",2096,G__StFcsWaveformFitMaker_Cint_262_0_136, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - s_color s - 'Color_t' 0 - e_color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFoundPeakStyleS",1805,G__StFcsWaveformFitMaker_Cint_262_0_137, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - s_style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFoundPeakStyleE",1791,G__StFcsWaveformFitMaker_Cint_262_0_138, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - e_style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFoundPeakStyle",1722,G__StFcsWaveformFitMaker_Cint_262_0_139, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Style_t' 0 - s_style s - 'Style_t' 0 - e_style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFoundPeakWidthS",1788,G__StFcsWaveformFitMaker_Cint_262_0_140, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - s_width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFoundPeakWidthE",1774,G__StFcsWaveformFitMaker_Cint_262_0_141, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Width_t' 0 - e_width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFoundPeakWidth",1705,G__StFcsWaveformFitMaker_Cint_262_0_142, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Width_t' 0 - s_width s - 'Width_t' 0 - e_width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakLineColorS",1671,G__StFcsWaveformFitMaker_Cint_262_0_143, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - peakidx s - 'Color_t' 0 - s_color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakLineColorE",1657,G__StFcsWaveformFitMaker_Cint_262_0_144, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - peakidx s - 'Color_t' 0 - e_color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakLineColor",1588,G__StFcsWaveformFitMaker_Cint_262_0_145, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - peakidx s - 'Color_t' 0 - s_color "
"s - 'Color_t' 0 - e_color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakLineColorAlphaS",2157,G__StFcsWaveformFitMaker_Cint_262_0_146, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - peakidx s - 'Color_t' 0 - s_color "
"f - 'Float_t' 0 - s_alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakLineColorAlphaE",2143,G__StFcsWaveformFitMaker_Cint_262_0_147, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - peakidx s - 'Color_t' 0 - e_color "
"f - 'Float_t' 0 - e_alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakLineColorAlpha",2074,G__StFcsWaveformFitMaker_Cint_262_0_148, 121, -1, -1, 0, 5, 1, 1, 0, 
"h - 'UInt_t' 0 - peakidx s - 'Color_t' 0 - s_color "
"f - 'Float_t' 0 - s_alpha s - 'Color_t' 0 - e_color "
"f - 'Float_t' 0 - e_alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakLineStyleS",1689,G__StFcsWaveformFitMaker_Cint_262_0_149, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - peakidx s - 'Style_t' 0 - s_style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakLineStyleE",1675,G__StFcsWaveformFitMaker_Cint_262_0_150, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - peakidx s - 'Style_t' 0 - e_style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakLineStyle",1606,G__StFcsWaveformFitMaker_Cint_262_0_151, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - peakidx s - 'Style_t' 0 - s_style "
"s - 'Style_t' 0 - e_style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakLineWidthS",1672,G__StFcsWaveformFitMaker_Cint_262_0_152, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - peakidx s - 'Width_t' 0 - s_width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakLineWidthE",1658,G__StFcsWaveformFitMaker_Cint_262_0_153, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - peakidx s - 'Width_t' 0 - e_width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPeakLineWidth",1589,G__StFcsWaveformFitMaker_Cint_262_0_154, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - peakidx s - 'Width_t' 0 - s_width "
"s - 'Width_t' 0 - e_width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAllPeakLineColor",1869,G__StFcsWaveformFitMaker_Cint_262_0_155, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Color_t' 0 - s_color s - 'Color_t' 0 - e_color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAllPeakLineStyle",1887,G__StFcsWaveformFitMaker_Cint_262_0_156, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Style_t' 0 - s_style s - 'Color_t' 0 - e_style", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAllPeakLineWidth",1870,G__StFcsWaveformFitMaker_Cint_262_0_157, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Width_t' 0 - s_width s - 'Width_t' 0 - e_width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "!< Initialize internal varaibles", (void*) NULL, 0);
   G__memfunc_setup("GaussianMatrix2D",1574,(G__InterfaceMethod) NULL, 68, -1, -1, 0, 5, 3, 2, 0, 
"i - - 0 - rx d - - 0 '0' sx "
"i - - 0 '0' ry d - - 0 '0' sy "
"g - - 0 'true' kNorm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MergeLeft",891,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 2, 8, 
"d - 'Double_t' 0 - leftchir d - 'Double_t' 0 - thischir "
"d - 'Double_t' 0 - rightchir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MergeIndices",1199,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR), G__defined_typename("vector<std::pair<int,int> >"), 0, 1, 1, 2, 8, "u 'vector<short,allocator<short> >' 'vector<short>' 1 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StFcsWaveformFitMaker_Cint_262_0_162, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PeakAna::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFcsWaveformFitMaker_Cint_262_0_163, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PeakAna::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFcsWaveformFitMaker_Cint_262_0_164, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PeakAna::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFcsWaveformFitMaker_Cint_262_0_165, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PeakAna::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFcsWaveformFitMaker_Cint_262_0_169, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFcsWaveformFitMaker_Cint_262_0_170, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PeakAna::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFcsWaveformFitMaker_Cint_262_0_171, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PeakAna::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFcsWaveformFitMaker_Cint_262_0_172, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PeakAna::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFcsWaveformFitMaker_Cint_262_0_173, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PeakAna::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~PeakAna", 783, G__StFcsWaveformFitMaker_Cint_262_0_174, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStFcsPulseAna(void) {
   /* StFcsPulseAna */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna));
   G__memfunc_setup("StFcsPulseAna",1276,G__StFcsWaveformFitMaker_Cint_317_0_1, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna), -1, 0, 0, 1, 1, 0, "", "!< Default constructor", (void*) NULL, 0);
   G__memfunc_setup("StFcsPulseAna",1276,G__StFcsWaveformFitMaker_Cint_317_0_2, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", "!< Constructor with name", (void*) NULL, 0);
   G__memfunc_setup("StFcsPulseAna",1276,G__StFcsWaveformFitMaker_Cint_317_0_3, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna), -1, 0, 2, 5, 1, 0, 
"U 'TGraph' - 0 - Sig u 'string' - 0 '\"StFcsPulseAna\"' name", "!< Construct with a known TGraph", (void*) NULL, 0);
   G__memfunc_setup("StFcsPulseAna",1276,G__StFcsWaveformFitMaker_Cint_317_0_4, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna), -1, 0, 3, 1, 1, 0, 
"u 'StFcsPulseAna' - 11 - old C - - 10 '\"_copy\"' post_name "
"U 'TGraph' - 0 '0' graph", "!< Copy Constructor can be called with a new graph and post-fix to the name", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StFcsWaveformFitMaker_Cint_317_0_5, 117, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna), -1, 1, 1, 1, 1, 0, "u 'StFcsPulseAna' - 11 - rhs", "!< Assignment operator", (void*) NULL, 0);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - obj", "!< Internal method use Clone instead.", (void*) NULL, 1);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", "!< Clones internal graph as opposed to just copying the pointer", (void*) NULL, 1);
   G__memfunc_setup("AnalyzeForPeak",1404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "!< Overwritten from #PeakAna to process peak tunneling after finding all peaks", (void*) NULL, 1);
   G__memfunc_setup("AnalyzeForPeak",1404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - peak d - 'Double_t' 0 - width", "<! same as #AnalyzeForPeak() but also sets search parameters for peak", (void*) NULL, 1);
   G__memfunc_setup("AnalyzeForNoisyPeak",1934,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "<! First calls #ConvertToAna() function and then #AnalyzeForPeak() on the converted data", (void*) NULL, 1);
   G__memfunc_setup("MaxwellBoltzmannDist",2083,G__StFcsWaveformFitMaker_Cint_317_0_11, 100, -1, -1, 0, 2, 3, 1, 0, 
"D - - 0 - x D - - 0 - p", "!< Maxwell Boltzmann Distribution function", (void*) G__func2void( (double (*)(double*, double*))(&StFcsPulseAna::MaxwellBoltzmannDist) ), 0);
   G__memfunc_setup("GetMBPars",837,G__StFcsWaveformFitMaker_Cint_317_0_12, 121, -1, -1, 0, 6, 3, 1, 0, 
"d - - 11 - xpeak d - - 11 - xrise "
"d - - 11 - yh d - - 11 - ped "
"d - - 1 - height d - - 1 - scale", "!< Get parameters for a Maxwell Boltzmann distribution from above based on the 4 const parameters ", (void*) G__func2void( (void (*)(const double&, const double&, const double&, const double&, double&, double&))(&StFcsPulseAna::GetMBPars) ), 0);
   G__memfunc_setup("GetData",666,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrors), -1, 0, 0, 1, 1, 8, "", "!< Overwrite from #PeakAna to type convert for #StFcsWaveformFitMaker", (void*) NULL, 1);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", "!< @return #mName as const char*", (void*) NULL, 1);
   G__memfunc_setup("Name",385,G__StFcsWaveformFitMaker_Cint_317_0_15, 117, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_string), -1, 1, 0, 1, 1, 0, "", "!< @return #mName", (void*) NULL, 0);
   G__memfunc_setup("Name",385,G__StFcsWaveformFitMaker_Cint_317_0_16, 117, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_string), -1, 1, 0, 1, 1, 9, "", "!< @return #mName", (void*) NULL, 0);
   G__memfunc_setup("setDbPulse",1019,G__StFcsWaveformFitMaker_Cint_317_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StFcsDbPulse' - 0 - p", "!< @param p sets #mDbPulse", (void*) NULL, 0);
   G__memfunc_setup("ResetFinder",1115,G__StFcsWaveformFitMaker_Cint_317_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Resets all histograms and values", (void*) NULL, 0);
   G__memfunc_setup("ResetBaseline",1318,G__StFcsWaveformFitMaker_Cint_317_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Resets baseline values", (void*) NULL, 0);
   G__memfunc_setup("ResetSum",824,G__StFcsWaveformFitMaker_Cint_317_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Only resets variables related to finding the sum", (void*) NULL, 0);
   G__memfunc_setup("Sum",309,G__StFcsWaveformFitMaker_Cint_317_0_21, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Start i - 'Int_t' 0 - End", "!< Add raw ADC within a given range and subtract the baseline", (void*) NULL, 0);
   G__memfunc_setup("SumWindow",941,G__StFcsWaveformFitMaker_Cint_317_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "!< Sum the ADC in the peak defined by #mFoundPeak and subtract the baseline", (void*) NULL, 0);
   G__memfunc_setup("GausFit",691,G__StFcsWaveformFitMaker_Cint_317_0_23, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' Start i - 'Int_t' 0 '0' End", "!< Do a Gaussian fit on #mFoundPeak and return the integral subtracted by the baseline", (void*) NULL, 0);
   G__memfunc_setup("SignalMBPars",1155,G__StFcsWaveformFitMaker_Cint_317_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 1 - height d - - 1 - scale", "!< Figure out the height and scale of a Maxwell-Boltzmann distribution that approximates the signal ", (void*) NULL, 0);
   G__memfunc_setup("SumMB",452,G__StFcsWaveformFitMaker_Cint_317_0_25, 100, -1, -1, 0, 0, 1, 1, 0, "", "!< Integral of an approximated Maxwell-Boltzmann distribution minus the baseline", (void*) NULL, 0);
   G__memfunc_setup("MBFit",434,G__StFcsWaveformFitMaker_Cint_317_0_26, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' Start i - 'Int_t' 0 '0' End", "!< Fit a Maxwell-Boltzmann distribution to #mFoundPeak and return the integral minus the baseline", (void*) NULL, 0);
   G__memfunc_setup("PulseFit",812,G__StFcsWaveformFitMaker_Cint_317_0_27, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' Start i - 'Int_t' 0 '0' End", "!< Fit the pulse shape defined in #StFcsDbPulse::multiPulseShape() to all peaks and return the integral of the found peak minus the baseline", (void*) NULL, 0);
   G__memfunc_setup("SetFitPars",997,G__StFcsWaveformFitMaker_Cint_317_0_28, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TF1' - 1 - func i - - 0 '-1' start "
"i - - 0 '-1' end", "!< Set the parameters of an external TF1 function that has the form of #StFcsDbPulse::multiPulseShape(), optionally only set fit paramaters for peaks from index start up to and including end", (void*) NULL, 0);
   G__memfunc_setup("FillAdc",655,G__StFcsWaveformFitMaker_Cint_317_0_29, 121, -1, -1, 0, 4, 3, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g r - - 1 - counter "
"i - - 0 - Start R - - 0 - adcdata", "!< Needed for SumDep0, et al. It basically fills in tb vs. adc sequentially so all timebins from a given start value have an adc.", (void*) G__func2void( (void (*)(TGraphAsymmErrors*, unsigned short&, int, unsigned short*))(&StFcsPulseAna::FillAdc) ), 0);
   G__memfunc_setup("SumDep0",638,G__StFcsWaveformFitMaker_Cint_317_0_30, 105, -1, -1, 0, 3, 3, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - gdata i - - 0 - Start "
"i - - 0 '0' ped", "!< Test of sum method in DEP board", (void*) G__func2void( (int (*)(TGraphAsymmErrors*, int, int))(&StFcsPulseAna::SumDep0) ), 0);
   G__memfunc_setup("SumDep0Mod",926,G__StFcsWaveformFitMaker_Cint_317_0_31, 105, -1, -1, 0, 3, 3, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - gdata i - - 0 - Start "
"i - - 0 '0' ped", "!< Test my modified sum method to DEP board", (void*) G__func2void( (int (*)(TGraphAsymmErrors*, int, int))(&StFcsPulseAna::SumDep0Mod) ), 0);
   G__memfunc_setup("SetFitSignal",1197,G__StFcsWaveformFitMaker_Cint_317_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF1' - 0 - func", "!< @param func sets #mF1_SignalFit", (void*) NULL, 0);
   G__memfunc_setup("SetBaselineFit",1394,G__StFcsWaveformFitMaker_Cint_317_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF1' - 0 - func", "!< @param func sets #mF1_BaselineFit", (void*) NULL, 0);
   G__memfunc_setup("SetZS",473,G__StFcsWaveformFitMaker_Cint_317_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Call this for ZS data which uses thresholds that are relevant for that. (like 0 baseline and 0.5 sigma so thereshold is at 2 since ZS is pedestal subtracted. Maybe even 0.3 so it is above one.", (void*) NULL, 0);
   G__memfunc_setup("AnalyzeForPedestal",1837,G__StFcsWaveformFitMaker_Cint_317_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", "!< Analyze graph data to determine baseline internally", (void*) NULL, 0);
   G__memfunc_setup("BaselineHist",1211,G__StFcsWaveformFitMaker_Cint_317_0_36, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", "!< @return mH1_Baseline", (void*) NULL, 0);
   G__memfunc_setup("SignalFit",897,G__StFcsWaveformFitMaker_Cint_317_0_37, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TF1), -1, 0, 1, 1, 1, 0, "c - - 10 ''n'' option", "Replace with a function that actually calls \"fit\" and then returns the function?Arguments can be values and range?A little more complicated since hard to tell when user would want to call a fit or just get the function itself?Maybe no arguments means give me function, arguments means do a refit?", (void*) NULL, 0);
   G__memfunc_setup("SignalFit",897,G__StFcsWaveformFitMaker_Cint_317_0_38, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TF1), -1, 0, 0, 1, 1, 8, "", "!< @return mF1_SignalFit", (void*) NULL, 0);
   G__memfunc_setup("BaselineFit",1094,G__StFcsWaveformFitMaker_Cint_317_0_39, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TF1), -1, 0, 0, 1, 1, 8, "", "!< @return mF1_BaselineFit", (void*) NULL, 0);
   G__memfunc_setup("DrawCopy",809,G__StFcsWaveformFitMaker_Cint_317_0_40, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna), -1, 0, 3, 1, 1, 8, 
"C - 'Option_t' 10 '\"\"' opt C - - 10 '\"_copy\"' name_postfix "
"U 'TGraph' - 0 '0' graph", "!< Clone and draw, see #PeakAna::Draw() for options", (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", "!< Print class variables @param opt \"ana\" means call #PeakAna::Print(), \"debug\" print extra information", (void*) NULL, 1);
   G__memfunc_setup("MergeByProbability",1836,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'vector<PeakWindow,allocator<PeakWindow> >' 'vector<PeakWindow>' 1 - merged", "!< Overwritten from #PeakAna::MergeByProbability() to change merge criteria", (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "!< Initialize everything to zero except signal and background histograms", (void*) NULL, 0);
   G__memfunc_setup("FindBaseline",1188,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", "!< Does Gaussian fitting to #mH1_Baseline to determine baseline", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StFcsWaveformFitMaker_Cint_317_0_45, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StFcsPulseAna::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFcsWaveformFitMaker_Cint_317_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFcsPulseAna::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFcsWaveformFitMaker_Cint_317_0_47, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StFcsPulseAna::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFcsWaveformFitMaker_Cint_317_0_48, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StFcsPulseAna::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFcsWaveformFitMaker_Cint_317_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFcsWaveformFitMaker_Cint_317_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFcsPulseAna::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFcsWaveformFitMaker_Cint_317_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFcsPulseAna::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFcsWaveformFitMaker_Cint_317_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFcsPulseAna::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFcsWaveformFitMaker_Cint_317_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFcsPulseAna::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StFcsPulseAna", 1402, G__StFcsWaveformFitMaker_Cint_317_0_57, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStFcsWaveformFitMaker(void) {
   /* StFcsWaveformFitMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsWaveformFitMaker));
   G__memfunc_setup("StFcsWaveformFitMaker",2109,G__StFcsWaveformFitMaker_Cint_630_0_1, 105, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsWaveformFitMaker), -1, 0, 1, 1, 1, 0, "C - - 10 '\"StFcsWaveformFitMaker\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitRun",713,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - runNumber", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setDebug",819,G__StFcsWaveformFitMaker_Cint_630_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTest",748,G__StFcsWaveformFitMaker_Cint_630_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", "!< Set test level. Intended to be used for single files. Output file name can be changed with #writeFile(), see #mTest for meaning of values", (void*) NULL, 0);
   G__memfunc_setup("setEnergySelect",1558,G__StFcsWaveformFitMaker_Cint_630_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 '10' ecal i - - 0 '10' hcal "
"i - - 0 '1' pres", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCenterTimeBins",1736,G__StFcsWaveformFitMaker_Cint_630_0_10, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - v i - - 0 '0' min "
"i - - 0 '512' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAdcSaturation",1662,G__StFcsWaveformFitMaker_Cint_630_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setError",854,G__StFcsWaveformFitMaker_Cint_630_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setErrorSaturated",1795,G__StFcsWaveformFitMaker_Cint_630_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMinAdc",888,G__StFcsWaveformFitMaker_Cint_630_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTail",726,G__StFcsWaveformFitMaker_Cint_630_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", "!< Set tail parameters to use for #mDbPulse, see #StFcsDbPulse::setTail()", (void*) NULL, 0);
   G__memfunc_setup("setMaxPeak",1011,G__StFcsWaveformFitMaker_Cint_630_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", "!< Set maximum number of peaks to fit, see #mMaxPeak", (void*) NULL, 0);
   G__memfunc_setup("setPedTimeBins",1408,G__StFcsWaveformFitMaker_Cint_630_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - min i - - 0 - max", "!< Set the timebin region where the pedestal occurs, for non-pedestal subtracted data", (void*) NULL, 0);
   G__memfunc_setup("setAnaWaveform",1443,G__StFcsWaveformFitMaker_Cint_630_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' value", "!< Set whether to compute integral of waveform (true); or just recompute energy (false); see #mAnaWaveform", (void*) NULL, 0);
   G__memfunc_setup("resetGraph",1045,G__StFcsWaveformFitMaker_Cint_630_0_19, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrors), -1, 0, 0, 1, 1, 0, "", "!< Create or Reset TGraphAsymmErrors (at #mHitIdx)", (void*) NULL, 0);
   G__memfunc_setup("getGraph",818,G__StFcsWaveformFitMaker_Cint_630_0_20, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrors), -1, 0, 1, 1, 1, 0, "i - - 0 '-1' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGraph",818,G__StFcsWaveformFitMaker_Cint_630_0_21, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrors), -1, 0, 2, 1, 1, 0, 
"i - - 0 - det i - - 0 - id", "!< Get graph of a particular detector and channel id if it exists in #mChWaveData", (void*) NULL, 0);
   G__memfunc_setup("setMeasureTime",1453,G__StFcsWaveformFitMaker_Cint_630_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeTGraphAsymmErrors",2152,G__StFcsWaveformFitMaker_Cint_630_0_23, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrors), -1, 0, 3, 1, 1, 0, 
"i - - 0 - n D - - 0 - t "
"D - - 0 - adc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeTGraphAsymmErrors",2152,G__StFcsWaveformFitMaker_Cint_630_0_24, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrors), -1, 0, 1, 1, 1, 0, "U 'TGraph' - 0 - g", "!< Same as #makeTGraphAsymmErrors(int,double*,double*) except using a TGraph object", (void*) NULL, 0);
   G__memfunc_setup("makeTGraphAsymmErrors",2152,G__StFcsWaveformFitMaker_Cint_630_0_25, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrors), -1, 0, 1, 1, 1, 0, "U 'StFcsHit' - 0 - hit", "!< Same as #makeTGraphAsymmErrors(int,double*,double*) except using #StFcsHit object, also names graphs by detid and chan id", (void*) NULL, 0);
   G__memfunc_setup("makeTGraphAsymmErrors",2152,G__StFcsWaveformFitMaker_Cint_630_0_26, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrors), -1, 0, 1, 1, 1, 0, "U 'TH1' - 0 - hist", "!< Same as #makeTGraphAsymmErrors(int,double*,double*) except using 1D histogram where histogram bin is timebin value and ADC is bin content", (void*) NULL, 0);
   G__memfunc_setup("analyzeWaveform",1595,G__StFcsWaveformFitMaker_Cint_630_0_27, 102, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - select U 'TGraphAsymmErrors' - 0 - g "
"F - - 0 - res U 'TF1' - 1 - f "
"f - - 0 '0.0' ped", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("analyzeWaveform",1595,G__StFcsWaveformFitMaker_Cint_630_0_28, 102, -1, -1, 0, 7, 1, 1, 0, 
"i - - 0 - select i - - 0 - n "
"D - - 0 - t D - - 0 - adc "
"F - - 0 - res U 'TF1' - 1 - f "
"f - - 0 '0.0' ped", "!< same as #analyzeWaveform(int, TGraphAsymmErrors*, float*, TF1*&, float) except will generate TGraphAsymmErrors object from timebin (t) and adc array data", (void*) NULL, 0);
   G__memfunc_setup("analyzeWaveform",1595,G__StFcsWaveformFitMaker_Cint_630_0_29, 102, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - select U 'TGraph' - 0 - g "
"F - - 0 - res U 'TF1' - 1 - f "
"f - - 0 '0.0' ped", "!< same as #analyzeWaveform(int, TGraphAsymmErrors*, float*, TF1*&, float) except will generate TGraphAsymmErrors object from timebin and adc data in a TGraph", (void*) NULL, 0);
   G__memfunc_setup("analyzeWaveform",1595,G__StFcsWaveformFitMaker_Cint_630_0_30, 102, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - select U 'StFcsHit' - 0 - hit "
"F - - 0 - res U 'TF1' - 1 - f "
"f - - 0 '0.0' ped", "!< same as #analyzeWaveform(int, TGraphAsymmErrors*, float*, TF1*&, float) except will generate TGraphAsymmErrors object from #StFcsHit", (void*) NULL, 0);
   G__memfunc_setup("AnaPed",553,G__StFcsWaveformFitMaker_Cint_630_0_31, 102, -1, -1, 0, 3, 1, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g f - - 1 - ped "
"f - - 1 - pedstd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AnaPed",553,G__StFcsWaveformFitMaker_Cint_630_0_32, 102, -1, -1, 0, 3, 1, 1, 0, 
"U 'StFcsHit' - 0 - hit f - - 1 - ped "
"f - - 1 - pedstd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sum8",397,G__StFcsWaveformFitMaker_Cint_630_0_33, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g F - - 0 - res", "!< mEnergySelect=1", (void*) NULL, 0);
   G__memfunc_setup("sum16",444,G__StFcsWaveformFitMaker_Cint_630_0_34, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g F - - 0 - res", "!< mEnergySelect=2", (void*) NULL, 0);
   G__memfunc_setup("highest",748,G__StFcsWaveformFitMaker_Cint_630_0_35, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g F - - 0 - res", "!< mEnergySelect=3", (void*) NULL, 0);
   G__memfunc_setup("highest3",799,G__StFcsWaveformFitMaker_Cint_630_0_36, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g F - - 0 - res", "!< mEnergySelect=4", (void*) NULL, 0);
   G__memfunc_setup("gausFit",723,G__StFcsWaveformFitMaker_Cint_630_0_37, 102, -1, -1, 0, 4, 1, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g F - - 0 - res "
"U 'TF1' - 1 - f f - - 0 '0.0' ped", "!< mEnergySelect=10", (void*) NULL, 0);
   G__memfunc_setup("gausFitWithPed",1416,G__StFcsWaveformFitMaker_Cint_630_0_38, 102, -1, -1, 0, 3, 1, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g F - - 0 - res "
"U 'TF1' - 1 - f", "!< mEnergySelect=11", (void*) NULL, 0);
   G__memfunc_setup("PulseFit1",861,G__StFcsWaveformFitMaker_Cint_630_0_39, 102, -1, -1, 0, 4, 1, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g F - - 0 - res "
"U 'TF1' - 1 - f f - - 0 '0.0' ped", "!< mEnergySelect=12, find and fit selected peaks around triggered crossing using #PeakCompare()", (void*) NULL, 0);
   G__memfunc_setup("PulseFit2",862,G__StFcsWaveformFitMaker_Cint_630_0_40, 102, -1, -1, 0, 4, 1, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g F - - 0 - res "
"U 'TF1' - 1 - f f - - 0 '0.0' ped", "!< mEnergySelect=13, (default) find and fit selected peaks around triggered crossing using #NPeaksPrePost()", (void*) NULL, 0);
   G__memfunc_setup("PulseFitAll",1093,G__StFcsWaveformFitMaker_Cint_630_0_41, 102, -1, -1, 0, 4, 1, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g F - - 0 - res "
"U 'TF1' - 1 - f f - - 0 '0.0' ped", "!< mEnergySelect=14, fit all peaks less than mMaxPeak", (void*) NULL, 0);
   G__memfunc_setup("PulseFit2WithPed",1555,G__StFcsWaveformFitMaker_Cint_630_0_42, 102, -1, -1, 0, 3, 1, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g F - - 0 - res "
"U 'TF1' - 1 - f", "!< mEnergySelect=15, first find pedestal using #AnaPed(), then call #PulseFit2()", (void*) NULL, 0);
   G__memfunc_setup("PulseFitAllWithPed",1786,G__StFcsWaveformFitMaker_Cint_630_0_43, 102, -1, -1, 0, 3, 1, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g F - - 0 - res "
"U 'TF1' - 1 - f", "!< mEnergySelect=16, first find pedestal using #AnaPed(), then call #PulseFitAll()", (void*) NULL, 0);
   G__memfunc_setup("PedFitPulseFit",1384,G__StFcsWaveformFitMaker_Cint_630_0_44, 102, -1, -1, 0, 3, 1, 1, 0, 
"U 'TGraphAsymmErrors' - 0 - g F - - 0 - res "
"U 'TF1' - 1 - f", "!< mEnergySelect=17, first find pedestal using #StFcsPulseAna::AnalyzePedestal() then call #PulseFitAll()", (void*) NULL, 0);
   G__memfunc_setup("setMaxPage",1007,G__StFcsWaveformFitMaker_Cint_630_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", "!< Max pages to draw", (void*) NULL, 0);
   G__memfunc_setup("setSkip",739,G__StFcsWaveformFitMaker_Cint_630_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", "!< Number of channels to skip before drawing", (void*) NULL, 0);
   G__memfunc_setup("setFileName",1101,G__StFcsWaveformFitMaker_Cint_630_0_47, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - file i - - 0 '25' maxpage "
"i - - 0 '5' skip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeFile",939,G__StFcsWaveformFitMaker_Cint_630_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - filename", "!< Use to change the name of the file where test histograms will be saved", (void*) NULL, 0);
   G__memfunc_setup("setFitDrawOn",1210,G__StFcsWaveformFitMaker_Cint_630_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFitFilter",1237,G__StFcsWaveformFitMaker_Cint_630_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - filter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("centerTB",791,G__StFcsWaveformFitMaker_Cint_630_0_51, 105, -1, -1, 0, 0, 1, 1, 8, "", "!< @return  #mCenterTB", (void*) NULL, 0);
   G__memfunc_setup("setDavidFitter",1442,G__StFcsWaveformFitMaker_Cint_630_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StFcsPulseAna' - 0 - v", "!< Override #mPulseFit, will be deleted", (void*) NULL, 0);
   G__memfunc_setup("davidFitter",1142,G__StFcsWaveformFitMaker_Cint_630_0_53, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna), -1, 0, 0, 1, 1, 0, "", "!< @return #mPulseFit", (void*) NULL, 0);
   G__memfunc_setup("InitFitter",1026,G__StFcsWaveformFitMaker_Cint_630_0_54, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna), -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0' ped", "!< Sets up basic values needed by #StFcsPulseAna @param ped the pedestal value to use", (void*) NULL, 0);
   G__memfunc_setup("GenericPadPos",1284,G__StFcsWaveformFitMaker_Cint_630_0_55, 105, -1, -1, 0, 3, 3, 1, 0, 
"i - - 0 - value i - - 0 - Nvals "
"i - - 0 - PadNums", (char*)NULL, (void*) G__func2void( (int (*)(int, int, int))(&StFcsWaveformFitMaker::GenericPadPos) ), 0);
   G__memfunc_setup("PadNum4x4",805,G__StFcsWaveformFitMaker_Cint_630_0_56, 105, -1, -1, 0, 3, 3, 1, 0, 
"i - - 0 - det i - - 0 - col "
"i - - 0 - row", (char*)NULL, (void*) G__func2void( (int (*)(int, int, int))(&StFcsWaveformFitMaker::PadNum4x4) ), 0);
   G__memfunc_setup("drawRegion",1042,G__StFcsWaveformFitMaker_Cint_630_0_57, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - det i - - 0 - col_low "
"i - - 0 - row_low i - - 0 - col_high "
"i - - 0 - row_high i - - 0 '0' event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawEvent",944,G__StFcsWaveformFitMaker_Cint_630_0_58, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - det i - - 0 '0' event", "!< Utilizes #drawRegion() to draw all channels in an event", (void*) NULL, 0);
   G__memfunc_setup("drawFitter",1052,G__StFcsWaveformFitMaker_Cint_630_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", "!< Call #StFcsPulseAna::Draw()", (void*) NULL, 0);
   G__memfunc_setup("drawCh",601,G__StFcsWaveformFitMaker_Cint_630_0_60, 121, -1, -1, 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - detid h - 'UInt_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawDualFit",1111,G__StFcsWaveformFitMaker_Cint_630_0_61, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - detid h - 'UInt_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printArray",1068,G__StFcsWaveformFitMaker_Cint_630_0_62, 121, -1, -1, 0, 0, 1, 1, 8, "", "!< Print contents of #mChWaveData, excluding timebin and adc information", (void*) NULL, 0);
   G__memfunc_setup("drawFit",721,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TGraphAsymmErrors' - 0 - g U 'TF1' - 0 - func", "!< Draw a single TGraph", (void*) NULL, 0);
   G__memfunc_setup("SetupDavidFitterMay2022",2132,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - 'Double_t' 0 '0' ped", "!< This special function is used to set all the parameters for #StFcsPulseAna based on cosmic and Run 22 data. It is intended to be used only for Run 22 data", (void*) NULL, 0);
   G__memfunc_setup("PeakCompare",1096,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 2, 0, 
"u 'PeakWindow' - 11 - pwin1 u 'PeakWindow' - 11 - pwin2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NPeaksPrePost",1295,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 3, 1, 2, 8, 
"i - - 1 - trigidx d - 'Double_t' 1 - xmin "
"d - 'Double_t' 1 - xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCVS",524,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 4, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StFcsWaveformFitMaker_Cint_630_0_68, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StFcsWaveformFitMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFcsWaveformFitMaker_Cint_630_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFcsWaveformFitMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFcsWaveformFitMaker_Cint_630_0_70, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StFcsWaveformFitMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFcsWaveformFitMaker_Cint_630_0_71, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StFcsWaveformFitMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFcsWaveformFitMaker_Cint_630_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFcsWaveformFitMaker_Cint_630_0_76, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFcsWaveformFitMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFcsWaveformFitMaker_Cint_630_0_77, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFcsWaveformFitMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFcsWaveformFitMaker_Cint_630_0_78, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFcsWaveformFitMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFcsWaveformFitMaker_Cint_630_0_79, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFcsWaveformFitMaker::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StFcsWaveformFitMaker", 2235, G__StFcsWaveformFitMaker_Cint_630_0_80, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGraphAsymmErrorsWithReset(void) {
   /* TGraphAsymmErrorsWithReset */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset));
   G__memfunc_setup("Reset",515,G__StFcsWaveformFitMaker_Cint_635_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StFcsWaveformFitMaker_Cint_635_0_2, 85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGraphAsymmErrorsWithReset::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFcsWaveformFitMaker_Cint_635_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGraphAsymmErrorsWithReset::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFcsWaveformFitMaker_Cint_635_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGraphAsymmErrorsWithReset::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFcsWaveformFitMaker_Cint_635_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGraphAsymmErrorsWithReset::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFcsWaveformFitMaker_Cint_635_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFcsWaveformFitMaker_Cint_635_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGraphAsymmErrorsWithReset::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFcsWaveformFitMaker_Cint_635_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGraphAsymmErrorsWithReset::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFcsWaveformFitMaker_Cint_635_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGraphAsymmErrorsWithReset::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFcsWaveformFitMaker_Cint_635_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGraphAsymmErrorsWithReset::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TGraphAsymmErrorsWithReset", 2665, G__StFcsWaveformFitMaker_Cint_635_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TGraphAsymmErrorsWithReset", 2665, G__StFcsWaveformFitMaker_Cint_635_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset), -1, 0, 1, 1, 1, 0, "u 'TGraphAsymmErrorsWithReset' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TGraphAsymmErrorsWithReset", 2791, G__StFcsWaveformFitMaker_Cint_635_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StFcsWaveformFitMaker_Cint_635_0_17, (int) ('u'), G__get_linked_tagnum(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset), -1, 1, 1, 1, 1, 0, "u 'TGraphAsymmErrorsWithReset' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStFcsWaveformFitMaker_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStFcsWaveformFitMaker_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStFcsWaveformFitMaker_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TLine = { "TLine" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TPaveText = { "TPaveText" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TMarker = { "TMarker" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_PeakWindow = { "PeakWindow" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_PeakAnaPainter = { "PeakAnaPainter" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_PeakAna = { "PeakAna" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_vectorlEPeakWindowcOallocatorlEPeakWindowgRsPgR = { "vector<PeakWindow,allocator<PeakWindow> >" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEPeakWindowcOallocatorlEPeakWindowgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PeakWindow,allocator<PeakWindow> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR = { "vector<pair<int,int>,allocator<pair<int,int> > >" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<int,int>,allocator<pair<int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrors = { "TGraphAsymmErrors" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TDataSet = { "TDataSet" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_StFcsDbPulse = { "StFcsDbPulse" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna = { "StFcsPulseAna" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_StMaker = { "StMaker" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_StFcsCollection = { "StFcsCollection" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_StFcsHit = { "StFcsHit" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_StFcsDb = { "StFcsDb" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_StFcsWaveformFitMaker = { "StFcsWaveformFitMaker" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset = { "TGraphAsymmErrorsWithReset" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStFcsWaveformFitMaker_Cint() {
  G__StFcsWaveformFitMaker_CintLN_TClass.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TBuffer.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TMemberInspector.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TObject.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TNamed.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TString.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_string.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TClonesArray.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TAttLine.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TFile.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TAttFill.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TAttMarker.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TF1.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TH1.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TH1F.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TLine.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TPaveText.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TMarker.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TGraph.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_PeakWindow.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_PeakAnaPainter.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_PeakAna.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_vectorlEPeakWindowcOallocatorlEPeakWindowgRsPgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEPeakWindowcOallocatorlEPeakWindowgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrors.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TDataSet.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_StFcsDbPulse.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_StMaker.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TH2F.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_StFcsCollection.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_StFcsHit.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_StFcsDb.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TCanvas.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_StFcsWaveformFitMaker.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStFcsWaveformFitMaker_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TString);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_string);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TFile);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TF1);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TH1);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TLine);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TPaveText);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TMarker);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TGraph);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_PeakWindow),sizeof(PeakWindow),-1,327424,(char*)NULL,G__setup_memvarPeakWindow,G__setup_memfuncPeakWindow);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_PeakAnaPainter),sizeof(PeakAnaPainter),-1,263424,(char*)NULL,G__setup_memvarPeakAnaPainter,G__setup_memfuncPeakAnaPainter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_PeakAna),sizeof(PeakAna),-1,327424,(char*)NULL,G__setup_memvarPeakAna,G__setup_memfuncPeakAna);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_vectorlEPeakWindowcOallocatorlEPeakWindowgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEPeakWindowcOallocatorlEPeakWindowgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrors);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TDataSet);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_StFcsDbPulse);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_StFcsPulseAna),sizeof(StFcsPulseAna),-1,327424,(char*)NULL,G__setup_memvarStFcsPulseAna,G__setup_memfuncStFcsPulseAna);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_StMaker);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_StFcsCollection);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_StFcsHit);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_StFcsDb);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TCanvas);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_StFcsWaveformFitMaker),sizeof(StFcsWaveformFitMaker),-1,324864,(char*)NULL,G__setup_memvarStFcsWaveformFitMaker,G__setup_memfuncStFcsWaveformFitMaker);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFcsWaveformFitMaker_CintLN_TGraphAsymmErrorsWithReset),sizeof(TGraphAsymmErrorsWithReset),-1,323584,(char*)NULL,G__setup_memvarTGraphAsymmErrorsWithReset,G__setup_memfuncTGraphAsymmErrorsWithReset);
}
extern "C" void G__cpp_setupStFcsWaveformFitMaker_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStFcsWaveformFitMaker_Cint()");
  G__set_cpp_environmentStFcsWaveformFitMaker_Cint();
  G__cpp_setup_tagtableStFcsWaveformFitMaker_Cint();

  G__cpp_setup_inheritanceStFcsWaveformFitMaker_Cint();

  G__cpp_setup_typetableStFcsWaveformFitMaker_Cint();

  G__cpp_setup_memvarStFcsWaveformFitMaker_Cint();

  G__cpp_setup_memfuncStFcsWaveformFitMaker_Cint();
  G__cpp_setup_globalStFcsWaveformFitMaker_Cint();
  G__cpp_setup_funcStFcsWaveformFitMaker_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStFcsWaveformFitMaker_Cint();
  return;
}
class G__cpp_setup_initStFcsWaveformFitMaker_Cint {
  public:
    G__cpp_setup_initStFcsWaveformFitMaker_Cint() { G__add_setup_func("StFcsWaveformFitMaker_Cint",(G__incsetup)(&G__cpp_setupStFcsWaveformFitMaker_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStFcsWaveformFitMaker_Cint() { G__remove_setup_func("StFcsWaveformFitMaker_Cint"); }
};
G__cpp_setup_initStFcsWaveformFitMaker_Cint G__cpp_setup_initializerStFcsWaveformFitMaker_Cint;

